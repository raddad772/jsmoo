"use strict";

/* This Z80 is a semi-port from Ares. Instead of rolling my own, I'm feeling a time crunch. There's about 5 systems I want to
    get running to some degree.

    Obviously I've put my own spin on it since I think coroutines were the biggest mistake Near ever made.
    But I used Ares a lot for "inspiration"
*/

function Z80_parity(val) {
    val ^= val >>> 4;
    val ^= val >>> 2;
    val ^= val >>> 1;
    return +((val & 1) === 0);
}

// Combo addressing mode & opcode table
const Z80_MN = Object.freeze({
  UKN: 0,
  ADC_a_irr: 1,
  ADC_a_n: 2,
  ADC_a_r: 3,
  ADC_hl_rr: 4,
  ADD_a_irr: 5,
  ADD_a_n: 6,
  ADD_a_r: 7,
  ADD_hl_rr: 8,
  AND_a_irr: 9,
  AND_a_n: 10,
  AND_a_r: 11,
  BIT_o_irr: 12,
  BIT_o_irr_r: 13,
  BIT_o_r: 14,
  CALL_c_nn: 15,
  CALL_nn: 16,
  CCF: 17,
  CP_a_irr: 18,
  CP_a_n: 19,
  CP_a_r: 20,
  CPD: 21,
  CPDR: 22,
  CPI: 23,
  CPIR: 24,
  CPL: 25,
  DAA: 26,
  DEC_irr: 27,
  DEC_r: 28,
  DEC_rr: 29,
  DI: 30,
  DJNZ_e: 31,
  EI: 32,
  EX_irr_rr: 33,
  EX_rr_rr: 34,
  EXX: 35,
  HALT: 36,
  IM_o: 37,
  IN_a_in: 38,
  IN_r_ic: 39,
  IN_ic: 40,
  INC_irr: 41,
  INC_r: 42,
  INC_rr: 43,
  IND: 44,
  INDR: 45,
  INI: 46,
  INIR: 47,
  JP_c_nn: 48,
  JP_rr: 49,
  JR_c_e: 50,
  LD_a_inn: 51,
  LD_a_irr: 52,
  LD_inn_a: 53,
  LD_inn_rr: 54,
  LD_irr_a: 55,
  LD_irr_n: 56,
  LD_irr_r: 57,
  LD_r_n: 58,
  LD_r_irr: 59,
  LD_r_r: 60,
  LD_r_r1: 61,
  LD_r_r2: 62,
  LD_rr_inn: 63,
  LD_rr_nn: 64,
  LD_sp_rr: 65,
  LDD: 66,
  LDDR: 67,
  LDI: 68,
  LDIR: 69,
  NEG: 70,
  NOP: 71,
  OR_a_irr: 72,
  OR_a_n: 73,
  OR_a_r: 74,
  OTDR: 75,
  OTIR: 76,
  OUT_ic_r: 77,
  OUT_ic: 78,
  OUT_in_a: 79,
  OUTD: 80,
  OUTI: 81,
  POP_rr: 82,
  PUSH_rr: 83,
  RES_o_irr: 84,
  RES_o_irr_r: 85,
  RES_o_r: 86,
  RET: 87,
  RET_c: 88,
  RETI: 89,
  RETN: 90,
  RL_irr: 91,
  RL_irr_r: 92,
  RL_r: 93,
  RLA: 94,
  RLC_irr: 95,
  RLC_irr_r: 96,
  RLC_r: 97,
  RLCA: 98,
  RLD: 99,
  RR_irr: 100,
  RR_irr_r: 101,
  RR_r: 102,
  RRA: 103,
  RRC_irr: 104,
  RRC_irr_r: 105,
  RRC_r: 106,
  RRCA: 107,
  RRD: 108,
  RST_o: 109,
  SBC_a_irr: 110,
  SBC_a_n: 111,
  SBC_a_r: 112,
  SBC_hl_rr: 113,
  SCF: 114,
  SET_o_irr: 115,
  SET_o_irr_r: 116,
  SET_o_r: 117,
  SLA_irr: 118,
  SLA_irr_r: 119,
  SLA_r: 120,
  SLL_irr: 121,
  SLL_irr_r: 122,
  SLL_r: 123,
  SRA_irr: 124,
  SRA_irr_r: 125,
  SRA_r: 126,
  SRL_irr: 127,
  SRL_irr_r: 128,
  SRL_r: 129,
  SUB_a_irr: 130,
  SUB_a_n: 131,
  SUB_a_r: 132,
  XOR_a_irr: 133,
  XOR_a_n: 134,
  XOR_a_r: 135,
  IRQ: 136,
  RESET: 137,
});


function z80_generate_mn_r() {
    let ostr = 'const Z80_MN_R = Object.freeze({\n';
    for (let k in Z80_MN) {
        ostr += '  ' + Z80_MN[k] + ': \'' + k + '\',\n'
    }
    return ostr + '});';
}
//console.log(z80_generate_mn_r());

const Z80_MN_R = Object.freeze({
  0: 'UKN',
  1: 'ADC_a_irr',
  2: 'ADC_a_n',
  3: 'ADC_a_r',
  4: 'ADC_hl_rr',
  5: 'ADD_a_irr',
  6: 'ADD_a_n',
  7: 'ADD_a_r',
  8: 'ADD_hl_rr',
  9: 'AND_a_irr',
  10: 'AND_a_n',
  11: 'AND_a_r',
  12: 'BIT_o_irr',
  13: 'BIT_o_irr_r',
  14: 'BIT_o_r',
  15: 'CALL_c_nn',
  16: 'CALL_nn',
  17: 'CCF',
  18: 'CP_a_irr',
  19: 'CP_a_n',
  20: 'CP_a_r',
  21: 'CPD',
  22: 'CPDR',
  23: 'CPI',
  24: 'CPIR',
  25: 'CPL',
  26: 'DAA',
  27: 'DEC_irr',
  28: 'DEC_r',
  29: 'DEC_rr',
  30: 'DI',
  31: 'DJNZ_e',
  32: 'EI',
  33: 'EX_irr_rr',
  34: 'EX_rr_rr',
  35: 'EXX',
  36: 'HALT',
  37: 'IM_o',
  38: 'IN_a_in',
  39: 'IN_r_ic',
  40: 'IN_ic',
  41: 'INC_irr',
  42: 'INC_r',
  43: 'INC_rr',
  44: 'IND',
  45: 'INDR',
  46: 'INI',
  47: 'INIR',
  48: 'JP_c_nn',
  49: 'JP_rr',
  50: 'JR_c_e',
  51: 'LD_a_inn',
  52: 'LD_a_irr',
  53: 'LD_inn_a',
  54: 'LD_inn_rr',
  55: 'LD_irr_a',
  56: 'LD_irr_n',
  57: 'LD_irr_r',
  58: 'LD_r_n',
  59: 'LD_r_irr',
  60: 'LD_r_r',
  61: 'LD_r_r1',
  62: 'LD_r_r2',
  63: 'LD_rr_inn',
  64: 'LD_rr_nn',
  65: 'LD_sp_rr',
  66: 'LDD',
  67: 'LDDR',
  68: 'LDI',
  69: 'LDIR',
  70: 'NEG',
  71: 'NOP',
  72: 'OR_a_irr',
  73: 'OR_a_n',
  74: 'OR_a_r',
  75: 'OTDR',
  76: 'OTIR',
  77: 'OUT_ic_r',
  78: 'OUT_ic',
  79: 'OUT_in_a',
  80: 'OUTD',
  81: 'OUTI',
  82: 'POP_rr',
  83: 'PUSH_rr',
  84: 'RES_o_irr',
  85: 'RES_o_irr_r',
  86: 'RES_o_r',
  87: 'RET',
  88: 'RET_c',
  89: 'RETI',
  90: 'RETN',
  91: 'RL_irr',
  92: 'RL_irr_r',
  93: 'RL_r',
  94: 'RLA',
  95: 'RLC_irr',
  96: 'RLC_irr_r',
  97: 'RLC_r',
  98: 'RLCA',
  99: 'RLD',
  100: 'RR_irr',
  101: 'RR_irr_r',
  102: 'RR_r',
  103: 'RRA',
  104: 'RRC_irr',
  105: 'RRC_irr_r',
  106: 'RRC_r',
  107: 'RRCA',
  108: 'RRD',
  109: 'RST_o',
  110: 'SBC_a_irr',
  111: 'SBC_a_n',
  112: 'SBC_a_r',
  113: 'SBC_hl_rr',
  114: 'SCF',
  115: 'SET_o_irr',
  116: 'SET_o_irr_r',
  117: 'SET_o_r',
  118: 'SLA_irr',
  119: 'SLA_irr_r',
  120: 'SLA_r',
  121: 'SLL_irr',
  122: 'SLL_irr_r',
  123: 'SLL_r',
  124: 'SRA_irr',
  125: 'SRA_irr_r',
  126: 'SRA_r',
  127: 'SRL_irr',
  128: 'SRL_irr_r',
  129: 'SRL_r',
  130: 'SUB_a_irr',
  131: 'SUB_a_n',
  132: 'SUB_a_r',
  133: 'XOR_a_irr',
  134: 'XOR_a_n',
  135: 'XOR_a_r',
  136: 'IRQ',
  137: 'RESET',
});

class Z80_opcode_info {
    constructor(opcode, ins, mnemonic, arg1=null, arg2=null, arg3=null) {
        this.opcode = opcode;
        this.ins = ins;
        this.mnemonic = mnemonic;
        this.arg1 = arg1;
        this.arg2 = arg2;
        this.arg3 = arg3;
    }
}

function Z80_generate_opcode_matrix()
{
    let outstr = 'const Z80_ED_opcode_matrix = Object.freeze({\n';
    for (let i = 0x40; i < 0xBC; i++) {
        outstr += '    ' + hex0x2(i) + ': new Z80_opcode_info(' + hex0x2(i) + ', Z80_MN.),\n'
    }
    outstr += '});'
    return outstr;
}

//console.log(Z80_generate_opcode_matrix());

const Z80_opcode_matrix_premn = {
    0x00: new Z80_opcode_info(0x00, Z80_MN.NOP, 'NOP'),
    0x01: new Z80_opcode_info(0x01, Z80_MN.LD_rr_nn, 'LD_rr_nn BC', 'BC'),
    0x02: new Z80_opcode_info(0x02, Z80_MN.LD_irr_a, 'LD_irr_a BC', 'BC'),
    0x03: new Z80_opcode_info(0x03, Z80_MN.INC_rr, 'INC_rr BC', 'BC'),
    0x04: new Z80_opcode_info(0x04, Z80_MN.INC_r, 'INC_r B', 'B'),
    0x05: new Z80_opcode_info(0x05, Z80_MN.DEC_r, 'DEC_r B', 'B'),
    0x06: new Z80_opcode_info(0x06, Z80_MN.LD_r_n, 'LD_r_n B', 'B'),
    0x07: new Z80_opcode_info(0x07, Z80_MN.RLCA, 'RLCA'),
    0x08: new Z80_opcode_info(0x08, Z80_MN.EX_rr_rr, 'EX_rr_rr AF AF_', 'AF', 'AF_'),
    0x09: new Z80_opcode_info(0x09, Z80_MN.ADD_hl_rr, 'ADD_hl_rr BC', 'BC'),
    0x0A: new Z80_opcode_info(0x0A, Z80_MN.LD_a_irr, 'LD_a_irr BC', 'BC'),
    0x0B: new Z80_opcode_info(0x0B, Z80_MN.DEC_rr, 'DEC_rr BC', 'BC'),
    0x0C: new Z80_opcode_info(0x0C, Z80_MN.INC_r, 'INC_r C', 'C'),
    0x0D: new Z80_opcode_info(0x0D, Z80_MN.DEC_r, 'DEC_r C', 'C'),
    0x0E: new Z80_opcode_info(0x0E, Z80_MN.LD_r_n, 'LD_r_n C', 'C'),
    0x0F: new Z80_opcode_info(0x0F, Z80_MN.RRCA, 'RRCA'),

    0x10: new Z80_opcode_info(0x10, Z80_MN.DJNZ_e, 'DJNZ_e'),
    0x11: new Z80_opcode_info(0x11, Z80_MN.LD_rr_nn, 'LD_rr_nn DE', 'DE'),
    0x12: new Z80_opcode_info(0x12, Z80_MN.LD_irr_a, 'LD_irr_a DE', 'DE'),
    0x13: new Z80_opcode_info(0x13, Z80_MN.INC_rr, 'INC_rr DE', 'DE'),
    0x14: new Z80_opcode_info(0x14, Z80_MN.INC_r, '', 'D'),
    0x15: new Z80_opcode_info(0x15, Z80_MN.DEC_r, '', 'D'),
    0x16: new Z80_opcode_info(0x16, Z80_MN.LD_r_n, '', 'D'),
    0x17: new Z80_opcode_info(0x17, Z80_MN.RLA, ''),
    0x18: new Z80_opcode_info(0x18, Z80_MN.JR_c_e, '',1),
    0x19: new Z80_opcode_info(0x19, Z80_MN.ADD_hl_rr, '','DE'),
    0x1A: new Z80_opcode_info(0x1A, Z80_MN.LD_a_irr, '', 'DE'),
    0x1B: new Z80_opcode_info(0x1B, Z80_MN.DEC_rr, '', 'DE'),
    0x1C: new Z80_opcode_info(0x1C, Z80_MN.INC_r, '', 'E'),
    0x1D: new Z80_opcode_info(0x1D, Z80_MN.DEC_r, '', 'E'),
    0x1E: new Z80_opcode_info(0x1E, Z80_MN.LD_r_n, '', 'E'),
    0x1F: new Z80_opcode_info(0x1F, Z80_MN.RRA, 'RRA'),

    0x20: new Z80_opcode_info(0x20, Z80_MN.JR_c_e, '', 'regs.F.Z === 0'),
    0x21: new Z80_opcode_info(0x21, Z80_MN.LD_rr_nn, '', 'HL'),
    0x22: new Z80_opcode_info(0x22, Z80_MN.LD_inn_rr, '', 'HL'),
    0x23: new Z80_opcode_info(0x23, Z80_MN.INC_rr, '', 'HL'),
    0x24: new Z80_opcode_info(0x24, Z80_MN.INC_r, '', 'H'),
    0x25: new Z80_opcode_info(0x25, Z80_MN.DEC_r, '', 'H'),
    0x26: new Z80_opcode_info(0x26, Z80_MN.LD_r_n, '', 'H'),
    0x27: new Z80_opcode_info(0x27, Z80_MN.DAA, 'DAA'),
    0x28: new Z80_opcode_info(0x28, Z80_MN.JR_c_e, '', 'regs.F.Z === 1'),
    0x29: new Z80_opcode_info(0x29, Z80_MN.ADD_hl_rr, '', 'HL'),
    0x2A: new Z80_opcode_info(0x2A, Z80_MN.LD_rr_inn, '', 'HL'),
    0x2B: new Z80_opcode_info(0x2B, Z80_MN.DEC_rr, '', 'HL'),
    0x2C: new Z80_opcode_info(0x2C, Z80_MN.INC_r, '', 'L'),
    0x2D: new Z80_opcode_info(0x2D, Z80_MN.DEC_r, '', 'L'),
    0x2E: new Z80_opcode_info(0x2E, Z80_MN.LD_r_n, '', 'L'),
    0x2F: new Z80_opcode_info(0x2F, Z80_MN.CPL, 'CPL'),

    0x30: new Z80_opcode_info(0x30, Z80_MN.JR_c_e, '', 'regs.F.C === 0'),
    0x31: new Z80_opcode_info(0x31, Z80_MN.LD_rr_nn, '', 'SP'),
    0x32: new Z80_opcode_info(0x32, Z80_MN.LD_inn_a, ''),
    0x33: new Z80_opcode_info(0x33, Z80_MN.INC_rr, '', 'SP'),
    0x34: new Z80_opcode_info(0x34, Z80_MN.INC_irr, '', 'HL'),
    0x35: new Z80_opcode_info(0x35, Z80_MN.DEC_irr, '', 'HL'),
    0x36: new Z80_opcode_info(0x36, Z80_MN.LD_irr_n, '', 'HL'),
    0x37: new Z80_opcode_info(0x37, Z80_MN.SCF, 'SCF'),
    0x38: new Z80_opcode_info(0x38, Z80_MN.JR_c_e, '', 'regs.F.C === 1'),
    0x39: new Z80_opcode_info(0x39, Z80_MN.ADD_hl_rr, '', 'SP'),
    0x3A: new Z80_opcode_info(0x3A, Z80_MN.LD_a_inn, ''),
    0x3B: new Z80_opcode_info(0x3B, Z80_MN.DEC_rr, '', 'SP'),
    0x3C: new Z80_opcode_info(0x3C, Z80_MN.INC_r, '', 'A'),
    0x3D: new Z80_opcode_info(0x3D, Z80_MN.DEC_r, '', 'A'),
    0x3E: new Z80_opcode_info(0x3E, Z80_MN.LD_r_n, '', 'A'),
    0x3F: new Z80_opcode_info(0x3F, Z80_MN.CCF, 'CCF'),

    0x40: new Z80_opcode_info(0x40, Z80_MN.LD_r_r, '', 'B', 'B'),
    0x41: new Z80_opcode_info(0x41, Z80_MN.LD_r_r, '', 'B', 'C'),
    0x42: new Z80_opcode_info(0x42, Z80_MN.LD_r_r, '', 'B', 'D'),
    0x43: new Z80_opcode_info(0x43, Z80_MN.LD_r_r, '', 'B', 'E'),
    0x44: new Z80_opcode_info(0x44, Z80_MN.LD_r_r, '', 'B', 'H'),
    0x45: new Z80_opcode_info(0x45, Z80_MN.LD_r_r, '', 'B', 'L'),
    0x46: new Z80_opcode_info(0x46, Z80_MN.LD_r_irr, '', 'B', 'HL'),
    0x47: new Z80_opcode_info(0x47, Z80_MN.LD_r_r, '', 'B', 'A'),
    0x48: new Z80_opcode_info(0x48, Z80_MN.LD_r_r, '', 'C', 'B'),
    0x49: new Z80_opcode_info(0x49, Z80_MN.LD_r_r, '', 'C', 'C'),
    0x4A: new Z80_opcode_info(0x4A, Z80_MN.LD_r_r, '', 'C', 'D'),
    0x4B: new Z80_opcode_info(0x4B, Z80_MN.LD_r_r, '', 'C', 'E'),
    0x4C: new Z80_opcode_info(0x4C, Z80_MN.LD_r_r, '', 'C', 'H'),
    0x4D: new Z80_opcode_info(0x4D, Z80_MN.LD_r_r, '', 'C', 'L'),
    0x4E: new Z80_opcode_info(0x4E, Z80_MN.LD_r_irr, '', 'C', 'HL'),
    0x4F: new Z80_opcode_info(0x4F, Z80_MN.LD_r_r, '', 'C', 'A'),

    0x50: new Z80_opcode_info(0x50, Z80_MN.LD_r_r, '', 'D', 'B'),
    0x51: new Z80_opcode_info(0x51, Z80_MN.LD_r_r, '', 'D', 'C'),
    0x52: new Z80_opcode_info(0x52, Z80_MN.LD_r_r, '', 'D', 'D'),
    0x53: new Z80_opcode_info(0x53, Z80_MN.LD_r_r, '', 'D', 'E'),
    0x54: new Z80_opcode_info(0x54, Z80_MN.LD_r_r, '', 'D', 'H'),
    0x55: new Z80_opcode_info(0x55, Z80_MN.LD_r_r, '', 'D', 'L'),
    0x56: new Z80_opcode_info(0x56, Z80_MN.LD_r_irr, '', 'D', 'HL'),
    0x57: new Z80_opcode_info(0x57, Z80_MN.LD_r_r, '', 'D', 'A'),
    0x58: new Z80_opcode_info(0x58, Z80_MN.LD_r_r, '', 'E', 'B'),
    0x59: new Z80_opcode_info(0x59, Z80_MN.LD_r_r, '', 'E', 'C'),
    0x5A: new Z80_opcode_info(0x5A, Z80_MN.LD_r_r, '', 'E', 'D'),
    0x5B: new Z80_opcode_info(0x5B, Z80_MN.LD_r_r, '', 'E', 'E'),
    0x5C: new Z80_opcode_info(0x5C, Z80_MN.LD_r_r, '', 'E', 'H'),
    0x5D: new Z80_opcode_info(0x5D, Z80_MN.LD_r_r, '', 'E', 'L'),
    0x5E: new Z80_opcode_info(0x5E, Z80_MN.LD_r_irr, '', 'E', 'HL'),
    0x5F: new Z80_opcode_info(0x5F, Z80_MN.LD_r_r, '', 'E', 'A'),

    0x60: new Z80_opcode_info(0x60, Z80_MN.LD_r_r, '', 'H', 'B'),
    0x61: new Z80_opcode_info(0x61, Z80_MN.LD_r_r, '', 'H', 'C'),
    0x62: new Z80_opcode_info(0x62, Z80_MN.LD_r_r, '', 'H', 'D'),
    0x63: new Z80_opcode_info(0x63, Z80_MN.LD_r_r, '', 'H', 'E'),
    0x64: new Z80_opcode_info(0x64, Z80_MN.LD_r_r, '', 'H', 'H'),
    0x65: new Z80_opcode_info(0x65, Z80_MN.LD_r_r, '', 'H', 'L'),
    0x66: new Z80_opcode_info(0x66, Z80_MN.LD_r_irr, '', '_H', 'HL'), // TODO: here
    0x67: new Z80_opcode_info(0x67, Z80_MN.LD_r_r, '', 'H', 'A'),
    0x68: new Z80_opcode_info(0x68, Z80_MN.LD_r_r, '', 'L', 'B'),
    0x69: new Z80_opcode_info(0x69, Z80_MN.LD_r_r, '', 'L', 'C'),
    0x6A: new Z80_opcode_info(0x6A, Z80_MN.LD_r_r, '', 'L', 'D'),
    0x6B: new Z80_opcode_info(0x6B, Z80_MN.LD_r_r, '', 'L', 'E'),
    0x6C: new Z80_opcode_info(0x6C, Z80_MN.LD_r_r, '', 'L', 'H'),
    0x6D: new Z80_opcode_info(0x6D, Z80_MN.LD_r_r, '', 'L', 'L'),
    0x6E: new Z80_opcode_info(0x6E, Z80_MN.LD_r_irr, '', '_L', 'HL'), // TODO: here
    0x6F: new Z80_opcode_info(0x6F, Z80_MN.LD_r_r, '', 'L', 'A'),

    0x70: new Z80_opcode_info(0x70, Z80_MN.LD_irr_r, '', 'HL', 'B'),
    0x71: new Z80_opcode_info(0x71, Z80_MN.LD_irr_r, '', 'HL', 'C'),
    0x72: new Z80_opcode_info(0x72, Z80_MN.LD_irr_r, '', 'HL', 'D'),
    0x73: new Z80_opcode_info(0x73, Z80_MN.LD_irr_r, '', 'HL', 'E'),
    0x74: new Z80_opcode_info(0x74, Z80_MN.LD_irr_r, '', 'HL', '_H'),
    0x75: new Z80_opcode_info(0x75, Z80_MN.LD_irr_r, '', 'HL', '_L'),
    0x76: new Z80_opcode_info(0x76, Z80_MN.HALT, 'HALT'),
    0x77: new Z80_opcode_info(0x77, Z80_MN.LD_irr_r, '', 'HL', 'A'),
    0x78: new Z80_opcode_info(0x78, Z80_MN.LD_r_r, '', 'A', 'B'),
    0x79: new Z80_opcode_info(0x79, Z80_MN.LD_r_r, '', 'A', 'C'),
    0x7A: new Z80_opcode_info(0x7A, Z80_MN.LD_r_r, '', 'A', 'D'),
    0x7B: new Z80_opcode_info(0x7B, Z80_MN.LD_r_r, '', 'A', 'E'),
    0x7C: new Z80_opcode_info(0x7C, Z80_MN.LD_r_r, '', 'A', 'H'),
    0x7D: new Z80_opcode_info(0x7D, Z80_MN.LD_r_r, '', 'A', 'L'),
    0x7E: new Z80_opcode_info(0x7E, Z80_MN.LD_r_irr, '', 'A', 'HL'),
    0x7F: new Z80_opcode_info(0x7F, Z80_MN.LD_r_r, '', 'A', 'A'),

    0x80: new Z80_opcode_info(0x80, Z80_MN.ADD_a_r, '', 'B'),
    0x81: new Z80_opcode_info(0x81, Z80_MN.ADD_a_r, '', 'C'),
    0x82: new Z80_opcode_info(0x82, Z80_MN.ADD_a_r, '', 'D'),
    0x83: new Z80_opcode_info(0x83, Z80_MN.ADD_a_r, '', 'E'),
    0x84: new Z80_opcode_info(0x84, Z80_MN.ADD_a_r, '', 'H'),
    0x85: new Z80_opcode_info(0x85, Z80_MN.ADD_a_r, '', 'L'),
    0x86: new Z80_opcode_info(0x86, Z80_MN.ADD_a_irr, '', 'HL'),
    0x87: new Z80_opcode_info(0x87, Z80_MN.ADD_a_r, '', 'A'),
    0x88: new Z80_opcode_info(0x88, Z80_MN.ADC_a_r, '', 'B'),
    0x89: new Z80_opcode_info(0x89, Z80_MN.ADC_a_r, '', 'C'),
    0x8A: new Z80_opcode_info(0x8A, Z80_MN.ADC_a_r, '', 'D'),
    0x8B: new Z80_opcode_info(0x8B, Z80_MN.ADC_a_r, '', 'E'),
    0x8C: new Z80_opcode_info(0x8C, Z80_MN.ADC_a_r, '', 'H'),
    0x8D: new Z80_opcode_info(0x8D, Z80_MN.ADC_a_r, '', 'L'),
    0x8E: new Z80_opcode_info(0x8E, Z80_MN.ADC_a_irr, '', 'HL'),
    0x8F: new Z80_opcode_info(0x8F, Z80_MN.ADC_a_r, '', 'A'),

    0x90: new Z80_opcode_info(0x90, Z80_MN.SUB_a_r, '', 'B'),
    0x91: new Z80_opcode_info(0x91, Z80_MN.SUB_a_r, '', 'C'),
    0x92: new Z80_opcode_info(0x92, Z80_MN.SUB_a_r, '', 'D'),
    0x93: new Z80_opcode_info(0x93, Z80_MN.SUB_a_r, '', 'E'),
    0x94: new Z80_opcode_info(0x94, Z80_MN.SUB_a_r, '', 'H'),
    0x95: new Z80_opcode_info(0x95, Z80_MN.SUB_a_r, '', 'L'),
    0x96: new Z80_opcode_info(0x96, Z80_MN.SUB_a_irr, '', 'HL'),
    0x97: new Z80_opcode_info(0x97, Z80_MN.SUB_a_r, '', 'A'),
    0x98: new Z80_opcode_info(0x98, Z80_MN.SBC_a_r, '', 'B'),
    0x99: new Z80_opcode_info(0x99, Z80_MN.SBC_a_r, '', 'C'),
    0x9A: new Z80_opcode_info(0x9A, Z80_MN.SBC_a_r, '', 'D'),
    0x9B: new Z80_opcode_info(0x9B, Z80_MN.SBC_a_r, '', 'E'),
    0x9C: new Z80_opcode_info(0x9C, Z80_MN.SBC_a_r, '', 'H'),
    0x9D: new Z80_opcode_info(0x9D, Z80_MN.SBC_a_r, '', 'L'),
    0x9E: new Z80_opcode_info(0x9E, Z80_MN.SBC_a_irr, '', 'HL'),
    0x9F: new Z80_opcode_info(0x9F, Z80_MN.SBC_a_r, '', 'A'),

    0xA0: new Z80_opcode_info(0xA0, Z80_MN.AND_a_r, '', 'B'),
    0xA1: new Z80_opcode_info(0xA1, Z80_MN.AND_a_r, '', 'C'),
    0xA2: new Z80_opcode_info(0xA2, Z80_MN.AND_a_r, '', 'D'),
    0xA3: new Z80_opcode_info(0xA3, Z80_MN.AND_a_r, '', 'E'),
    0xA4: new Z80_opcode_info(0xA4, Z80_MN.AND_a_r, '', 'H'),
    0xA5: new Z80_opcode_info(0xA5, Z80_MN.AND_a_r, '', 'L'),
    0xA6: new Z80_opcode_info(0xA6, Z80_MN.AND_a_irr, '', 'HL'),
    0xA7: new Z80_opcode_info(0xA7, Z80_MN.AND_a_r, '', 'A'),
    0xA8: new Z80_opcode_info(0xA8, Z80_MN.XOR_a_r, '', 'B'),
    0xA9: new Z80_opcode_info(0xA9, Z80_MN.XOR_a_r, '', 'C'),
    0xAA: new Z80_opcode_info(0xAA, Z80_MN.XOR_a_r, '', 'D'),
    0xAB: new Z80_opcode_info(0xAB, Z80_MN.XOR_a_r, '', 'E'),
    0xAC: new Z80_opcode_info(0xAC, Z80_MN.XOR_a_r, '', 'H'),
    0xAD: new Z80_opcode_info(0xAD, Z80_MN.XOR_a_r, '', 'L'),
    0xAE: new Z80_opcode_info(0xAE, Z80_MN.XOR_a_irr, '', 'HL'),
    0xAF: new Z80_opcode_info(0xAF, Z80_MN.XOR_a_r, '', 'A'),

    0xB0: new Z80_opcode_info(0xB0, Z80_MN.OR_a_r, '', 'B'),
    0xB1: new Z80_opcode_info(0xB1, Z80_MN.OR_a_r, '', 'C'),
    0xB2: new Z80_opcode_info(0xB2, Z80_MN.OR_a_r, '', 'D'),
    0xB3: new Z80_opcode_info(0xB3, Z80_MN.OR_a_r, '', 'E'),
    0xB4: new Z80_opcode_info(0xB4, Z80_MN.OR_a_r, '', 'H'),
    0xB5: new Z80_opcode_info(0xB5, Z80_MN.OR_a_r, '', 'L'),
    0xB6: new Z80_opcode_info(0xB6, Z80_MN.OR_a_irr, '', 'HL'),
    0xB7: new Z80_opcode_info(0xB7, Z80_MN.OR_a_r, '', 'A'),
    0xB8: new Z80_opcode_info(0xB8, Z80_MN.CP_a_r, '', 'B'),
    0xB9: new Z80_opcode_info(0xB9, Z80_MN.CP_a_r, '', 'C'),
    0xBA: new Z80_opcode_info(0xBA, Z80_MN.CP_a_r, '', 'D'),
    0xBB: new Z80_opcode_info(0xBB, Z80_MN.CP_a_r, '', 'E'),
    0xBC: new Z80_opcode_info(0xBC, Z80_MN.CP_a_r, '', 'H'),
    0xBD: new Z80_opcode_info(0xBD, Z80_MN.CP_a_r, '', 'L'),
    0xBE: new Z80_opcode_info(0xBE, Z80_MN.CP_a_irr, '', 'HL'),
    0xBF: new Z80_opcode_info(0xBF, Z80_MN.CP_a_r, '', 'A'),

    0xC0: new Z80_opcode_info(0xC0, Z80_MN.RET_c, '', 'regs.F.Z === 0'),
    0xC1: new Z80_opcode_info(0xC1, Z80_MN.POP_rr, '', 'BC'),
    0xC2: new Z80_opcode_info(0xC2, Z80_MN.JP_c_nn, '', 'regs.F.Z === 0'),
    0xC3: new Z80_opcode_info(0xC3, Z80_MN.JP_c_nn, '', '1'),
    0xC4: new Z80_opcode_info(0xC4, Z80_MN.CALL_c_nn, '', 'regs.F.Z === 0'),
    0xC5: new Z80_opcode_info(0xC5, Z80_MN.PUSH_rr, '', 'BC'),
    0xC6: new Z80_opcode_info(0xC6, Z80_MN.ADD_a_n, ''),
    0xC7: new Z80_opcode_info(0xC7, Z80_MN.RST_o, '', '0'),
    0xC8: new Z80_opcode_info(0xC8, Z80_MN.RET_c, '', 'regs.F.Z === 1'),
    0xC9: new Z80_opcode_info(0xC9, Z80_MN.RET, ''),
    0xCA: new Z80_opcode_info(0xCA, Z80_MN.JP_c_nn, '', 'regs.F.Z === 1'),
    //0xCB: new Z80_opcode_info(0xCB, Z80_MN.),
    0xCC: new Z80_opcode_info(0xCC, Z80_MN.CALL_c_nn, '', 'regs.F.Z === 1'),
    0xCD: new Z80_opcode_info(0xCD, Z80_MN.CALL_nn, ''),
    0xCE: new Z80_opcode_info(0xCE, Z80_MN.ADC_a_n, ''),
    0xCF: new Z80_opcode_info(0xCF, Z80_MN.RST_o, '', '1'),

    0xD0: new Z80_opcode_info(0xD0, Z80_MN.RET_c, '', 'regs.F.C === 0'),
    0xD1: new Z80_opcode_info(0xD1, Z80_MN.POP_rr, '', 'DE'),
    0xD2: new Z80_opcode_info(0xD2, Z80_MN.JP_c_nn, '', 'regs.F.C === 0'),
    0xD3: new Z80_opcode_info(0xD3, Z80_MN.OUT_in_a, ''),
    0xD4: new Z80_opcode_info(0xD4, Z80_MN.CALL_c_nn, '', 'regs.F.C === 0'),
    0xD5: new Z80_opcode_info(0xD5, Z80_MN.PUSH_rr, '', 'DE'),
    0xD6: new Z80_opcode_info(0xD6, Z80_MN.SUB_a_n, ''),
    0xD7: new Z80_opcode_info(0xD7, Z80_MN.RST_o, '', '2'),
    0xD8: new Z80_opcode_info(0xD8, Z80_MN.RET_c, '', 'regs.F.C === 1'),
    0xD9: new Z80_opcode_info(0xD9, Z80_MN.EXX, ''),
    0xDA: new Z80_opcode_info(0xDA, Z80_MN.JP_c_nn, '', 'regs.F.C === 1'),
    0xDB: new Z80_opcode_info(0xDB, Z80_MN.IN_a_in, ''),
    0xDC: new Z80_opcode_info(0xDC, Z80_MN.CALL_c_nn, '', 'regs.F.C === 1'),
    //0xDD: new Z80_opcode_info(0xDD, Z80_MN.),
    0xDE: new Z80_opcode_info(0xDE, Z80_MN.SBC_a_n, ''),
    0xDF: new Z80_opcode_info(0xDF, Z80_MN.RST_o, '', '3'),

    0xE0: new Z80_opcode_info(0xE0, Z80_MN.RET_c, '', 'regs.F.PV === 0'),
    0xE1: new Z80_opcode_info(0xE1, Z80_MN.POP_rr, '', 'HL'),
    0xE2: new Z80_opcode_info(0xE2, Z80_MN.JP_c_nn, '', 'regs.F.PV === 0'),
    0xE3: new Z80_opcode_info(0xE3, Z80_MN.EX_irr_rr, '', 'SP', 'HL'),
    0xE4: new Z80_opcode_info(0xE4, Z80_MN.CALL_c_nn, '', 'regs.F.PV === 0'),
    0xE5: new Z80_opcode_info(0xE5, Z80_MN.PUSH_rr, '', 'HL'),
    0xE6: new Z80_opcode_info(0xE6, Z80_MN.AND_a_n, ''),
    0xE7: new Z80_opcode_info(0xE7, Z80_MN.RST_o, '', '4'),
    0xE8: new Z80_opcode_info(0xE8, Z80_MN.RET_c, '', 'regs.F.PV === 1'),
    0xE9: new Z80_opcode_info(0xE9, Z80_MN.JP_rr, '', 'HL'),
    0xEA: new Z80_opcode_info(0xEA, Z80_MN.JP_c_nn, '', 'regs.F.PV === 1'),
    0xEB: new Z80_opcode_info(0xEB, Z80_MN.EX_rr_rr, '', 'DE', '_HL'),
    0xEC: new Z80_opcode_info(0xEC, Z80_MN.CALL_c_nn, '', 'regs.F.PV === 1'),
    //0xED: new Z80_opcode_info(0xED, Z80_MN.),
    0xEE: new Z80_opcode_info(0xEE, Z80_MN.XOR_a_n),
    0xEF: new Z80_opcode_info(0xEF, Z80_MN.RST_o, 'RST 5', '5'),

    0xF0: new Z80_opcode_info(0xF0, Z80_MN.RET_c, '', 'regs.F.S === 0'),
    0xF1: new Z80_opcode_info(0xF1, Z80_MN.POP_rr, '', 'AF'),
    0xF2: new Z80_opcode_info(0xF2, Z80_MN.JP_c_nn, '', 'regs.F.S === 0'),
    0xF3: new Z80_opcode_info(0xF3, Z80_MN.DI, 'DI'),
    0xF4: new Z80_opcode_info(0xF4, Z80_MN.CALL_c_nn, '', 'regs.F.S === 0'),
    0xF5: new Z80_opcode_info(0xF5, Z80_MN.PUSH_rr, '', 'AF'),
    0xF6: new Z80_opcode_info(0xF6, Z80_MN.OR_a_n, ''),
    0xF7: new Z80_opcode_info(0xF7, Z80_MN.RST_o, '', '6'),
    0xF8: new Z80_opcode_info(0xF8, Z80_MN.RET_c, '', 'regs.F.S === 1'),
    0xF9: new Z80_opcode_info(0xF9, Z80_MN.LD_sp_rr, '', 'HL'),
    0xFA: new Z80_opcode_info(0xFA, Z80_MN.JP_c_nn, '', 'regs.F.S === 1'),
    0xFB: new Z80_opcode_info(0xFB, Z80_MN.EI, 'EI'),
    0xFC: new Z80_opcode_info(0xFC, Z80_MN.CALL_c_nn, '', 'regs.F.S === 1'),
    //0xFD: new Z80_opcode_info(0xFD, Z80_MN.),
    0xFE: new Z80_opcode_info(0xFE, Z80_MN.CP_a_n, ''),
    0xFF: new Z80_opcode_info(0xFF, Z80_MN.RST_o, '', '7'),
    0x100: new Z80_opcode_info(0x100, Z80_MN.IRQ, 'IRQ'),
    0x101: new Z80_opcode_info(0x101, Z80_MN.RESET, 'RESET')
};

function Z80_fill_mnemonics(what) {
    for (let i in what) {
        let o = what[i];
        if (o.mnemonic === '') {
            let ostr = Z80_MN_R[o.ins];
            if (o.arg1 !== null) ostr += ' ' + o.arg1;
            if (o.arg2 !== null) ostr += ' ' + o.arg2;
            if (o.arg3 !== null) ostr += ' ' + o.arg3;
            o.mnemonic = ostr;
        }
    }
    return what;
}

const Z80_opcode_matrix = Object.freeze(Z80_fill_mnemonics(Z80_opcode_matrix_premn));

const Z80_CB_opcode_matrix_premn = {
    0x00: new Z80_opcode_info(0x00, Z80_MN.RLC_r, '', 'B'),
    0x01: new Z80_opcode_info(0x01, Z80_MN.RLC_r, '', 'C'),
    0x02: new Z80_opcode_info(0x02, Z80_MN.RLC_r, '', 'D'),
    0x03: new Z80_opcode_info(0x03, Z80_MN.RLC_r, '', 'E'),
    0x04: new Z80_opcode_info(0x04, Z80_MN.RLC_r, '', 'H'),
    0x05: new Z80_opcode_info(0x05, Z80_MN.RLC_r, '', 'L'),
    0x06: new Z80_opcode_info(0x06, Z80_MN.RLC_irr, '', '_HL'),
    0x07: new Z80_opcode_info(0x07, Z80_MN.RLC_r, '', 'A'),
    0x08: new Z80_opcode_info(0x08, Z80_MN.RRC_r, '', 'B'),
    0x09: new Z80_opcode_info(0x09, Z80_MN.RRC_r, '', 'C'),
    0x0A: new Z80_opcode_info(0x0A, Z80_MN.RRC_r, '', 'D'),
    0x0B: new Z80_opcode_info(0x0B, Z80_MN.RRC_r, '', 'E'),
    0x0C: new Z80_opcode_info(0x0C, Z80_MN.RRC_r, '', 'H'),
    0x0D: new Z80_opcode_info(0x0D, Z80_MN.RRC_r, '', 'L'),
    0x0E: new Z80_opcode_info(0x0E, Z80_MN.RRC_irr, '', '_HL'),
    0x0F: new Z80_opcode_info(0x0F, Z80_MN.RRC_r, '', 'A'),

    0x10: new Z80_opcode_info(0x10, Z80_MN.RL_r, '', 'B'),
    0x11: new Z80_opcode_info(0x11, Z80_MN.RL_r, '', 'C'),
    0x12: new Z80_opcode_info(0x12, Z80_MN.RL_r, '', 'D'),
    0x13: new Z80_opcode_info(0x13, Z80_MN.RL_r, '', 'E'),
    0x14: new Z80_opcode_info(0x14, Z80_MN.RL_r, '', 'H'),
    0x15: new Z80_opcode_info(0x15, Z80_MN.RL_r, '', 'L'),
    0x16: new Z80_opcode_info(0x16, Z80_MN.RL_irr, '', '_HL'),
    0x17: new Z80_opcode_info(0x17, Z80_MN.RL_r, '', 'A'),
    0x18: new Z80_opcode_info(0x18, Z80_MN.RR_r, '', 'B'),
    0x19: new Z80_opcode_info(0x19, Z80_MN.RR_r, '', 'C'),
    0x1A: new Z80_opcode_info(0x1A, Z80_MN.RR_r, '', 'D'),
    0x1B: new Z80_opcode_info(0x1B, Z80_MN.RR_r, '', 'E'),
    0x1C: new Z80_opcode_info(0x1C, Z80_MN.RR_r, '', 'H'),
    0x1D: new Z80_opcode_info(0x1D, Z80_MN.RR_r, '', 'L'),
    0x1E: new Z80_opcode_info(0x1E, Z80_MN.RR_irr, '', '_HL'),
    0x1F: new Z80_opcode_info(0x1F, Z80_MN.RR_r, '', 'A'),

    0x20: new Z80_opcode_info(0x20, Z80_MN.SLA_r, '', 'B'),
    0x21: new Z80_opcode_info(0x21, Z80_MN.SLA_r, '', 'C'),
    0x22: new Z80_opcode_info(0x22, Z80_MN.SLA_r, '', 'D'),
    0x23: new Z80_opcode_info(0x23, Z80_MN.SLA_r, '', 'E'),
    0x24: new Z80_opcode_info(0x24, Z80_MN.SLA_r, '', 'H'),
    0x25: new Z80_opcode_info(0x25, Z80_MN.SLA_r, '', 'L'),
    0x26: new Z80_opcode_info(0x26, Z80_MN.SLA_irr, '', '_HL'),
    0x27: new Z80_opcode_info(0x27, Z80_MN.SLA_r, '', 'A'),
    0x28: new Z80_opcode_info(0x28, Z80_MN.SRA_r, '', 'B'),
    0x29: new Z80_opcode_info(0x29, Z80_MN.SRA_r, '', 'C'),
    0x2A: new Z80_opcode_info(0x2A, Z80_MN.SRA_r, '', 'D'),
    0x2B: new Z80_opcode_info(0x2B, Z80_MN.SRA_r, '', 'E'),
    0x2C: new Z80_opcode_info(0x2C, Z80_MN.SRA_r, '', 'H'),
    0x2D: new Z80_opcode_info(0x2D, Z80_MN.SRA_r, '', 'L'),
    0x2E: new Z80_opcode_info(0x2E, Z80_MN.SRA_irr, '', '_HL'),
    0x2F: new Z80_opcode_info(0x2F, Z80_MN.SRA_r, '', 'A'),

    0x30: new Z80_opcode_info(0x30, Z80_MN.SLL_r, '', 'B'),
    0x31: new Z80_opcode_info(0x31, Z80_MN.SLL_r, '', 'C'),
    0x32: new Z80_opcode_info(0x32, Z80_MN.SLL_r, '', 'D'),
    0x33: new Z80_opcode_info(0x33, Z80_MN.SLL_r, '', 'E'),
    0x34: new Z80_opcode_info(0x34, Z80_MN.SLL_r, '', 'H'),
    0x35: new Z80_opcode_info(0x35, Z80_MN.SLL_r, '', 'L'),
    0x36: new Z80_opcode_info(0x36, Z80_MN.SLL_irr, '', '_HL'),
    0x37: new Z80_opcode_info(0x37, Z80_MN.SLL_r, '', 'A'),
    0x38: new Z80_opcode_info(0x38, Z80_MN.SRL_r, '', 'B'),
    0x39: new Z80_opcode_info(0x39, Z80_MN.SRL_r, '', 'C'),
    0x3A: new Z80_opcode_info(0x3A, Z80_MN.SRL_r, '', 'D'),
    0x3B: new Z80_opcode_info(0x3B, Z80_MN.SRL_r, '', 'E'),
    0x3C: new Z80_opcode_info(0x3C, Z80_MN.SRL_r, '', 'H'),
    0x3D: new Z80_opcode_info(0x3D, Z80_MN.SRL_r, '', 'L'),
    0x3E: new Z80_opcode_info(0x3E, Z80_MN.SRL_irr, '', '_HL'),
    0x3F: new Z80_opcode_info(0x3F, Z80_MN.SRL_r, '', 'A'),

    0x40: new Z80_opcode_info(0x40, Z80_MN.BIT_o_r, '', '0', 'B'),
    0x41: new Z80_opcode_info(0x41, Z80_MN.BIT_o_r, '', '0', 'C'),
    0x42: new Z80_opcode_info(0x42, Z80_MN.BIT_o_r, '', '0', 'D'),
    0x43: new Z80_opcode_info(0x43, Z80_MN.BIT_o_r, '', '0', 'E'),
    0x44: new Z80_opcode_info(0x44, Z80_MN.BIT_o_r, '', '0', 'H'),
    0x45: new Z80_opcode_info(0x45, Z80_MN.BIT_o_r, '', '0', 'L'),
    0x46: new Z80_opcode_info(0x46, Z80_MN.BIT_o_irr, '', '0', '_HL'),
    0x47: new Z80_opcode_info(0x47, Z80_MN.BIT_o_r, '', '0', 'A'),
    0x48: new Z80_opcode_info(0x48, Z80_MN.BIT_o_r, '', '1', 'B'),
    0x49: new Z80_opcode_info(0x49, Z80_MN.BIT_o_r, '', '1', 'C'),
    0x4A: new Z80_opcode_info(0x4A, Z80_MN.BIT_o_r, '', '1', 'D'),
    0x4B: new Z80_opcode_info(0x4B, Z80_MN.BIT_o_r, '', '1', 'E'),
    0x4C: new Z80_opcode_info(0x4C, Z80_MN.BIT_o_r, '', '1', 'H'),
    0x4D: new Z80_opcode_info(0x4D, Z80_MN.BIT_o_r, '', '1', 'L'),
    0x4E: new Z80_opcode_info(0x4E, Z80_MN.BIT_o_irr, '', '1', '_HL'),
    0x4F: new Z80_opcode_info(0x4F, Z80_MN.BIT_o_r, '', '1', 'A'),

    0x50: new Z80_opcode_info(0x50, Z80_MN.BIT_o_r, '', '2', 'B'),
    0x51: new Z80_opcode_info(0x51, Z80_MN.BIT_o_r, '', '2', 'C'),
    0x52: new Z80_opcode_info(0x52, Z80_MN.BIT_o_r, '', '2', 'D'),
    0x53: new Z80_opcode_info(0x53, Z80_MN.BIT_o_r, '', '2', 'E'),
    0x54: new Z80_opcode_info(0x54, Z80_MN.BIT_o_r, '', '2', 'H'),
    0x55: new Z80_opcode_info(0x55, Z80_MN.BIT_o_r, '', '2', 'L'),
    0x56: new Z80_opcode_info(0x56, Z80_MN.BIT_o_irr, '', '2', '_HL'),
    0x57: new Z80_opcode_info(0x57, Z80_MN.BIT_o_r, '', '2', 'A'),
    0x58: new Z80_opcode_info(0x58, Z80_MN.BIT_o_r, '', '3', 'B'),
    0x59: new Z80_opcode_info(0x59, Z80_MN.BIT_o_r, '', '3', 'C'),
    0x5A: new Z80_opcode_info(0x5A, Z80_MN.BIT_o_r, '', '3', 'D'),
    0x5B: new Z80_opcode_info(0x5B, Z80_MN.BIT_o_r, '', '3', 'E'),
    0x5C: new Z80_opcode_info(0x5C, Z80_MN.BIT_o_r, '', '3', 'H'),
    0x5D: new Z80_opcode_info(0x5D, Z80_MN.BIT_o_r, '', '3', 'L'),
    0x5E: new Z80_opcode_info(0x5E, Z80_MN.BIT_o_irr, '', '3', '_HL'),
    0x5F: new Z80_opcode_info(0x5F, Z80_MN.BIT_o_r, '', '3', 'A'),

    0x60: new Z80_opcode_info(0x60, Z80_MN.BIT_o_r, '', '4', 'B'),
    0x61: new Z80_opcode_info(0x61, Z80_MN.BIT_o_r, '', '4', 'C'),
    0x62: new Z80_opcode_info(0x62, Z80_MN.BIT_o_r, '', '4', 'D'),
    0x63: new Z80_opcode_info(0x63, Z80_MN.BIT_o_r, '', '4', 'E'),
    0x64: new Z80_opcode_info(0x64, Z80_MN.BIT_o_r, '', '4', 'H'),
    0x65: new Z80_opcode_info(0x65, Z80_MN.BIT_o_r, '', '4', 'L'),
    0x66: new Z80_opcode_info(0x66, Z80_MN.BIT_o_irr, '', '4', '_HL'),
    0x67: new Z80_opcode_info(0x67, Z80_MN.BIT_o_r, '', '4', 'A'),
    0x68: new Z80_opcode_info(0x68, Z80_MN.BIT_o_r, '', '5', 'B'),
    0x69: new Z80_opcode_info(0x69, Z80_MN.BIT_o_r, '', '5', 'C'),
    0x6A: new Z80_opcode_info(0x6A, Z80_MN.BIT_o_r, '', '5', 'D'),
    0x6B: new Z80_opcode_info(0x6B, Z80_MN.BIT_o_r, '', '5', 'E'),
    0x6C: new Z80_opcode_info(0x6C, Z80_MN.BIT_o_r, '', '5', 'H'),
    0x6D: new Z80_opcode_info(0x6D, Z80_MN.BIT_o_r, '', '5', 'L'),
    0x6E: new Z80_opcode_info(0x6E, Z80_MN.BIT_o_irr, '', '5', '_HL'),
    0x6F: new Z80_opcode_info(0x6F, Z80_MN.BIT_o_r, '', '5', 'A'),

    0x70: new Z80_opcode_info(0x70, Z80_MN.BIT_o_r, '', '6', 'B'),
    0x71: new Z80_opcode_info(0x71, Z80_MN.BIT_o_r, '', '6', 'C'),
    0x72: new Z80_opcode_info(0x72, Z80_MN.BIT_o_r, '', '6', 'D'),
    0x73: new Z80_opcode_info(0x73, Z80_MN.BIT_o_r, '', '6', 'E'),
    0x74: new Z80_opcode_info(0x74, Z80_MN.BIT_o_r, '', '6', 'H'),
    0x75: new Z80_opcode_info(0x75, Z80_MN.BIT_o_r, '', '6', 'L'),
    0x76: new Z80_opcode_info(0x76, Z80_MN.BIT_o_irr, '', '6', '_HL'),
    0x77: new Z80_opcode_info(0x77, Z80_MN.BIT_o_r, '', '6', 'A'),
    0x78: new Z80_opcode_info(0x78, Z80_MN.BIT_o_r, '', '7', 'B'),
    0x79: new Z80_opcode_info(0x79, Z80_MN.BIT_o_r, '', '7', 'C'),
    0x7A: new Z80_opcode_info(0x7A, Z80_MN.BIT_o_r, '', '7', 'D'),
    0x7B: new Z80_opcode_info(0x7B, Z80_MN.BIT_o_r, '', '7', 'E'),
    0x7C: new Z80_opcode_info(0x7C, Z80_MN.BIT_o_r, '', '7', 'H'),
    0x7D: new Z80_opcode_info(0x7D, Z80_MN.BIT_o_r, '', '7', 'L'),
    0x7E: new Z80_opcode_info(0x7E, Z80_MN.BIT_o_irr, '', '7', '_HL'),
    0x7F: new Z80_opcode_info(0x7F, Z80_MN.BIT_o_r, '', '7', 'A'),

    0x80: new Z80_opcode_info(0x80, Z80_MN.RES_o_r, '', '0', 'B'),
    0x81: new Z80_opcode_info(0x81, Z80_MN.RES_o_r, '', '0', 'C'),
    0x82: new Z80_opcode_info(0x82, Z80_MN.RES_o_r, '', '0', 'D'),
    0x83: new Z80_opcode_info(0x83, Z80_MN.RES_o_r, '', '0', 'E'),
    0x84: new Z80_opcode_info(0x84, Z80_MN.RES_o_r, '', '0', 'H'),
    0x85: new Z80_opcode_info(0x85, Z80_MN.RES_o_r, '', '0', 'L'),
    0x86: new Z80_opcode_info(0x86, Z80_MN.RES_o_irr, '', '0', '_HL'),
    0x87: new Z80_opcode_info(0x87, Z80_MN.RES_o_r, '', '0', 'A'),
    0x88: new Z80_opcode_info(0x88, Z80_MN.RES_o_r, '', '1', 'B'),
    0x89: new Z80_opcode_info(0x89, Z80_MN.RES_o_r, '', '1', 'C'),
    0x8A: new Z80_opcode_info(0x8A, Z80_MN.RES_o_r, '', '1', 'D'),
    0x8B: new Z80_opcode_info(0x8B, Z80_MN.RES_o_r, '', '1', 'E'),
    0x8C: new Z80_opcode_info(0x8C, Z80_MN.RES_o_r, '', '1', 'H'),
    0x8D: new Z80_opcode_info(0x8D, Z80_MN.RES_o_r, '', '1', 'L'),
    0x8E: new Z80_opcode_info(0x8E, Z80_MN.RES_o_irr, '', '1', '_HL'),
    0x8F: new Z80_opcode_info(0x8F, Z80_MN.RES_o_r, '', '1', 'A'),

    0x90: new Z80_opcode_info(0x90, Z80_MN.RES_o_r, '', '2', 'B'),
    0x91: new Z80_opcode_info(0x91, Z80_MN.RES_o_r, '', '2', 'C'),
    0x92: new Z80_opcode_info(0x92, Z80_MN.RES_o_r, '', '2', 'D'),
    0x93: new Z80_opcode_info(0x93, Z80_MN.RES_o_r, '', '2', 'E'),
    0x94: new Z80_opcode_info(0x94, Z80_MN.RES_o_r, '', '2', 'H'),
    0x95: new Z80_opcode_info(0x95, Z80_MN.RES_o_r, '', '2', 'L'),
    0x96: new Z80_opcode_info(0x96, Z80_MN.RES_o_irr, '', '2', '_HL'),
    0x97: new Z80_opcode_info(0x97, Z80_MN.RES_o_r, '', '2', 'A'),
    0x98: new Z80_opcode_info(0x98, Z80_MN.RES_o_r, '', '3', 'B'),
    0x99: new Z80_opcode_info(0x99, Z80_MN.RES_o_r, '', '3', 'C'),
    0x9A: new Z80_opcode_info(0x9A, Z80_MN.RES_o_r, '', '3', 'D'),
    0x9B: new Z80_opcode_info(0x9B, Z80_MN.RES_o_r, '', '3', 'E'),
    0x9C: new Z80_opcode_info(0x9C, Z80_MN.RES_o_r, '', '3', 'H'),
    0x9D: new Z80_opcode_info(0x9D, Z80_MN.RES_o_r, '', '3', 'L'),
    0x9E: new Z80_opcode_info(0x9E, Z80_MN.RES_o_irr, '', '3', '_HL'),
    0x9F: new Z80_opcode_info(0x9F, Z80_MN.RES_o_r, '', '3', 'A'),

    0xA0: new Z80_opcode_info(0xA0, Z80_MN.RES_o_r, '', '4', 'B'),
    0xA1: new Z80_opcode_info(0xA1, Z80_MN.RES_o_r, '', '4', 'C'),
    0xA2: new Z80_opcode_info(0xA2, Z80_MN.RES_o_r, '', '4', 'D'),
    0xA3: new Z80_opcode_info(0xA3, Z80_MN.RES_o_r, '', '4', 'E'),
    0xA4: new Z80_opcode_info(0xA4, Z80_MN.RES_o_r, '', '4', 'H'),
    0xA5: new Z80_opcode_info(0xA5, Z80_MN.RES_o_r, '', '4', 'L'),
    0xA6: new Z80_opcode_info(0xA6, Z80_MN.RES_o_irr, '', '4', '_HL'),
    0xA7: new Z80_opcode_info(0xA7, Z80_MN.RES_o_r, '', '4', 'A'),
    0xA8: new Z80_opcode_info(0xA8, Z80_MN.RES_o_r, '', '5', 'B'),
    0xA9: new Z80_opcode_info(0xA9, Z80_MN.RES_o_r, '', '5', 'C'),
    0xAA: new Z80_opcode_info(0xAA, Z80_MN.RES_o_r, '', '5', 'D'),
    0xAB: new Z80_opcode_info(0xAB, Z80_MN.RES_o_r, '', '5', 'E'),
    0xAC: new Z80_opcode_info(0xAC, Z80_MN.RES_o_r, '', '5', 'H'),
    0xAD: new Z80_opcode_info(0xAD, Z80_MN.RES_o_r, '', '5', 'L'),
    0xAE: new Z80_opcode_info(0xAE, Z80_MN.RES_o_irr, '', '5', '_HL'),
    0xAF: new Z80_opcode_info(0xAF, Z80_MN.RES_o_r, '', '5', 'A'),

    0xB0: new Z80_opcode_info(0xB0, Z80_MN.RES_o_r, '', '6', 'B'),
    0xB1: new Z80_opcode_info(0xB1, Z80_MN.RES_o_r, '', '6', 'C'),
    0xB2: new Z80_opcode_info(0xB2, Z80_MN.RES_o_r, '', '6', 'D'),
    0xB3: new Z80_opcode_info(0xB3, Z80_MN.RES_o_r, '', '6', 'E'),
    0xB4: new Z80_opcode_info(0xB4, Z80_MN.RES_o_r, '', '6', 'H'),
    0xB5: new Z80_opcode_info(0xB5, Z80_MN.RES_o_r, '', '6', 'L'),
    0xB6: new Z80_opcode_info(0xB6, Z80_MN.RES_o_irr, '', '6', '_HL'),
    0xB7: new Z80_opcode_info(0xB7, Z80_MN.RES_o_r, '', '6', 'A'),
    0xB8: new Z80_opcode_info(0xB8, Z80_MN.RES_o_r, '', '7', 'B'),
    0xB9: new Z80_opcode_info(0xB9, Z80_MN.RES_o_r, '', '7', 'C'),
    0xBA: new Z80_opcode_info(0xBA, Z80_MN.RES_o_r, '', '7', 'D'),
    0xBB: new Z80_opcode_info(0xBB, Z80_MN.RES_o_r, '', '7', 'E'),
    0xBC: new Z80_opcode_info(0xBC, Z80_MN.RES_o_r, '', '7', 'H'),
    0xBD: new Z80_opcode_info(0xBD, Z80_MN.RES_o_r, '', '7', 'L'),
    0xBE: new Z80_opcode_info(0xBE, Z80_MN.RES_o_irr, '', '7', '_HL'),
    0xBF: new Z80_opcode_info(0xBF, Z80_MN.RES_o_r, '', '7', 'A'),

    0xC0: new Z80_opcode_info(0xC0, Z80_MN.SET_o_r, '', '0', 'B'),
    0xC1: new Z80_opcode_info(0xC1, Z80_MN.SET_o_r, '', '0', 'C'),
    0xC2: new Z80_opcode_info(0xC2, Z80_MN.SET_o_r, '', '0', 'D'),
    0xC3: new Z80_opcode_info(0xC3, Z80_MN.SET_o_r, '', '0', 'E'),
    0xC4: new Z80_opcode_info(0xC4, Z80_MN.SET_o_r, '', '0', 'H'),
    0xC5: new Z80_opcode_info(0xC5, Z80_MN.SET_o_r, '', '0', 'L'),
    0xC6: new Z80_opcode_info(0xC6, Z80_MN.SET_o_irr, '', '0', '_HL'),
    0xC7: new Z80_opcode_info(0xC7, Z80_MN.SET_o_r, '', '0', 'A'),
    0xC8: new Z80_opcode_info(0xC8, Z80_MN.SET_o_r, '', '1', 'B'),
    0xC9: new Z80_opcode_info(0xC9, Z80_MN.SET_o_r, '', '1', 'C'),
    0xCA: new Z80_opcode_info(0xCA, Z80_MN.SET_o_r, '', '1', 'D'),
    0xCB: new Z80_opcode_info(0xCB, Z80_MN.SET_o_r, '', '1', 'E'),
    0xCC: new Z80_opcode_info(0xCC, Z80_MN.SET_o_r, '', '1', 'H'),
    0xCD: new Z80_opcode_info(0xCD, Z80_MN.SET_o_r, '', '1', 'L'),
    0xCE: new Z80_opcode_info(0xCE, Z80_MN.SET_o_irr, '', '1','_HL'),
    0xCF: new Z80_opcode_info(0xCF, Z80_MN.SET_o_r, '', '1', 'A'),

    0xD0: new Z80_opcode_info(0xD0, Z80_MN.SET_o_r, '', '2', 'B'),
    0xD1: new Z80_opcode_info(0xD1, Z80_MN.SET_o_r, '', '2', 'C'),
    0xD2: new Z80_opcode_info(0xD2, Z80_MN.SET_o_r, '', '2', 'D'),
    0xD3: new Z80_opcode_info(0xD3, Z80_MN.SET_o_r, '', '2', 'E'),
    0xD4: new Z80_opcode_info(0xD4, Z80_MN.SET_o_r, '', '2', 'H'),
    0xD5: new Z80_opcode_info(0xD5, Z80_MN.SET_o_r, '', '2', 'L'),
    0xD6: new Z80_opcode_info(0xD6, Z80_MN.SET_o_irr, '', '2', '_HL'),
    0xD7: new Z80_opcode_info(0xD7, Z80_MN.SET_o_r, '', '2', 'A'),
    0xD8: new Z80_opcode_info(0xD8, Z80_MN.SET_o_r, '', '3', 'B'),
    0xD9: new Z80_opcode_info(0xD9, Z80_MN.SET_o_r, '', '3', 'C'),
    0xDA: new Z80_opcode_info(0xDA, Z80_MN.SET_o_r, '', '3', 'D'),
    0xDB: new Z80_opcode_info(0xDB, Z80_MN.SET_o_r, '', '3', 'E'),
    0xDC: new Z80_opcode_info(0xDC, Z80_MN.SET_o_r, '', '3', 'H'),
    0xDD: new Z80_opcode_info(0xDD, Z80_MN.SET_o_r, '', '3', 'L'),
    0xDE: new Z80_opcode_info(0xDE, Z80_MN.SET_o_irr, '', '3','_HL'),
    0xDF: new Z80_opcode_info(0xDF, Z80_MN.SET_o_r, '', '3', 'A'),

    0xE0: new Z80_opcode_info(0xE0, Z80_MN.SET_o_r, '', '4', 'B'),
    0xE1: new Z80_opcode_info(0xE1, Z80_MN.SET_o_r, '', '4', 'C'),
    0xE2: new Z80_opcode_info(0xE2, Z80_MN.SET_o_r, '', '4', 'D'),
    0xE3: new Z80_opcode_info(0xE3, Z80_MN.SET_o_r, '', '4', 'E'),
    0xE4: new Z80_opcode_info(0xE4, Z80_MN.SET_o_r, '', '4', 'H'),
    0xE5: new Z80_opcode_info(0xE5, Z80_MN.SET_o_r, '', '4', 'L'),
    0xE6: new Z80_opcode_info(0xE6, Z80_MN.SET_o_irr, '', '4', '_HL'),
    0xE7: new Z80_opcode_info(0xE7, Z80_MN.SET_o_r, '', '4', 'A'),
    0xE8: new Z80_opcode_info(0xE8, Z80_MN.SET_o_r, '', '5', 'B'),
    0xE9: new Z80_opcode_info(0xE9, Z80_MN.SET_o_r, '', '5', 'C'),
    0xEA: new Z80_opcode_info(0xEA, Z80_MN.SET_o_r, '', '5', 'D'),
    0xEB: new Z80_opcode_info(0xEB, Z80_MN.SET_o_r, '', '5', 'E'),
    0xEC: new Z80_opcode_info(0xEC, Z80_MN.SET_o_r, '', '5', 'H'),
    0xED: new Z80_opcode_info(0xED, Z80_MN.SET_o_r, '', '5', 'L'),
    0xEE: new Z80_opcode_info(0xEE, Z80_MN.SET_o_irr, '', '5','_HL'),
    0xEF: new Z80_opcode_info(0xEF, Z80_MN.SET_o_r, '', '5', 'A'),

    0xF0: new Z80_opcode_info(0xF0, Z80_MN.SET_o_r, '', '6', 'B'),
    0xF1: new Z80_opcode_info(0xF1, Z80_MN.SET_o_r, '', '6', 'C'),
    0xF2: new Z80_opcode_info(0xF2, Z80_MN.SET_o_r, '', '6', 'D'),
    0xF3: new Z80_opcode_info(0xF3, Z80_MN.SET_o_r, '', '6', 'E'),
    0xF4: new Z80_opcode_info(0xF4, Z80_MN.SET_o_r, '', '6', 'H'),
    0xF5: new Z80_opcode_info(0xF5, Z80_MN.SET_o_r, '', '6', 'L'),
    0xF6: new Z80_opcode_info(0xF6, Z80_MN.SET_o_irr, '', '6', '_HL'),
    0xF7: new Z80_opcode_info(0xF7, Z80_MN.SET_o_r, '', '6', 'A'),
    0xF8: new Z80_opcode_info(0xF8, Z80_MN.SET_o_r, '', '7', 'B'),
    0xF9: new Z80_opcode_info(0xF9, Z80_MN.SET_o_r, '', '7', 'C'),
    0xFA: new Z80_opcode_info(0xFA, Z80_MN.SET_o_r, '', '7', 'D'),
    0xFB: new Z80_opcode_info(0xFB, Z80_MN.SET_o_r, '', '7', 'E'),
    0xFC: new Z80_opcode_info(0xFC, Z80_MN.SET_o_r, '', '7', 'H'),
    0xFD: new Z80_opcode_info(0xFD, Z80_MN.SET_o_r, '', '7', 'L'),
    0xFE: new Z80_opcode_info(0xFE, Z80_MN.SET_o_irr, '', '7','_HL'),
    0xFF: new Z80_opcode_info(0xFF, Z80_MN.SET_o_r, '', '7', 'A'),
};

const Z80_CB_opcode_matrix = Object.freeze(Z80_fill_mnemonics(Z80_CB_opcode_matrix_premn));

const Z80_CBd_opcode_matrix_premn = {
    0x00: new Z80_opcode_info(0x00, Z80_MN.RLC_irr_r, '', 'addr', 'B'),
    0x01: new Z80_opcode_info(0x01, Z80_MN.RLC_irr_r, '', 'addr', 'C'),
    0x02: new Z80_opcode_info(0x02, Z80_MN.RLC_irr_r, '', 'addr', 'D'),
    0x03: new Z80_opcode_info(0x03, Z80_MN.RLC_irr_r, '', 'addr', 'E'),
    0x04: new Z80_opcode_info(0x04, Z80_MN.RLC_irr_r, '', 'addr', 'H'),
    0x05: new Z80_opcode_info(0x05, Z80_MN.RLC_irr_r, '', 'addr', 'L'),
    0x06: new Z80_opcode_info(0x06, Z80_MN.RLC_irr_r, '', 'addr', '_'),
    0x07: new Z80_opcode_info(0x07, Z80_MN.RLC_irr_r, '', 'addr', 'A'),
    0x08: new Z80_opcode_info(0x08, Z80_MN.RRC_irr_r, '', 'addr', 'B'),
    0x09: new Z80_opcode_info(0x09, Z80_MN.RRC_irr_r, '', 'addr', 'C'),
    0x0A: new Z80_opcode_info(0x0A, Z80_MN.RRC_irr_r, '', 'addr', 'D'),
    0x0B: new Z80_opcode_info(0x0B, Z80_MN.RRC_irr_r, '', 'addr', 'E'),
    0x0C: new Z80_opcode_info(0x0C, Z80_MN.RRC_irr_r, '', 'addr', 'H'),
    0x0D: new Z80_opcode_info(0x0D, Z80_MN.RRC_irr_r, '', 'addr', 'L'),
    0x0E: new Z80_opcode_info(0x0E, Z80_MN.RRC_irr_r, '', 'addr', '_'),
    0x0F: new Z80_opcode_info(0x0F, Z80_MN.RRC_irr_r, '', 'addr', 'A'),

    0x10: new Z80_opcode_info(0x10, Z80_MN.RL_irr_r, '', 'addr', 'B'),
    0x11: new Z80_opcode_info(0x11, Z80_MN.RL_irr_r, '', 'addr', 'C'),
    0x12: new Z80_opcode_info(0x12, Z80_MN.RL_irr_r, '', 'addr', 'D'),
    0x13: new Z80_opcode_info(0x13, Z80_MN.RL_irr_r, '', 'addr', 'E'),
    0x14: new Z80_opcode_info(0x14, Z80_MN.RL_irr_r, '', 'addr', 'H'),
    0x15: new Z80_opcode_info(0x15, Z80_MN.RL_irr_r, '', 'addr', 'L'),
    0x16: new Z80_opcode_info(0x16, Z80_MN.RL_irr_r, '', 'addr', '_'),
    0x17: new Z80_opcode_info(0x17, Z80_MN.RL_irr_r, '', 'addr', 'A'),
    0x18: new Z80_opcode_info(0x18, Z80_MN.RR_irr_r, '', 'addr', 'B'),
    0x19: new Z80_opcode_info(0x19, Z80_MN.RR_irr_r, '', 'addr', 'C'),
    0x1A: new Z80_opcode_info(0x1A, Z80_MN.RR_irr_r, '', 'addr', 'D'),
    0x1B: new Z80_opcode_info(0x1B, Z80_MN.RR_irr_r, '', 'addr', 'E'),
    0x1C: new Z80_opcode_info(0x1C, Z80_MN.RR_irr_r, '', 'addr', 'H'),
    0x1D: new Z80_opcode_info(0x1D, Z80_MN.RR_irr_r, '', 'addr', 'L'),
    0x1E: new Z80_opcode_info(0x1E, Z80_MN.RR_irr_r, '', 'addr', '_'),
    0x1F: new Z80_opcode_info(0x1F, Z80_MN.RR_irr_r, '', 'addr', 'A'),

    0x20: new Z80_opcode_info(0x20, Z80_MN.SLA_irr_r, '', 'addr', 'B'),
    0x21: new Z80_opcode_info(0x21, Z80_MN.SLA_irr_r, '', 'addr', 'C'),
    0x22: new Z80_opcode_info(0x22, Z80_MN.SLA_irr_r, '', 'addr', 'D'),
    0x23: new Z80_opcode_info(0x23, Z80_MN.SLA_irr_r, '', 'addr', 'E'),
    0x24: new Z80_opcode_info(0x24, Z80_MN.SLA_irr_r, '', 'addr', 'H'),
    0x25: new Z80_opcode_info(0x25, Z80_MN.SLA_irr_r, '', 'addr', 'L'),
    0x26: new Z80_opcode_info(0x26, Z80_MN.SLA_irr_r, '', 'addr', '_'),
    0x27: new Z80_opcode_info(0x27, Z80_MN.SLA_irr_r, '', 'addr', 'A'),
    0x28: new Z80_opcode_info(0x28, Z80_MN.SRA_irr_r, '', 'addr', 'B'),
    0x29: new Z80_opcode_info(0x29, Z80_MN.SRA_irr_r, '', 'addr', 'C'),
    0x2A: new Z80_opcode_info(0x2A, Z80_MN.SRA_irr_r, '', 'addr', 'D'),
    0x2B: new Z80_opcode_info(0x2B, Z80_MN.SRA_irr_r, '', 'addr', 'E'),
    0x2C: new Z80_opcode_info(0x2C, Z80_MN.SRA_irr_r, '', 'addr', 'H'),
    0x2D: new Z80_opcode_info(0x2D, Z80_MN.SRA_irr_r, '', 'addr', 'L'),
    0x2E: new Z80_opcode_info(0x2E, Z80_MN.SRA_irr_r, '', 'addr', '_'),
    0x2F: new Z80_opcode_info(0x2F, Z80_MN.SRA_irr_r, '', 'addr', 'A'),

    0x30: new Z80_opcode_info(0x30, Z80_MN.SLL_irr_r, '', 'addr', 'B'),
    0x31: new Z80_opcode_info(0x31, Z80_MN.SLL_irr_r, '', 'addr', 'C'),
    0x32: new Z80_opcode_info(0x32, Z80_MN.SLL_irr_r, '', 'addr', 'D'),
    0x33: new Z80_opcode_info(0x33, Z80_MN.SLL_irr_r, '', 'addr', 'E'),
    0x34: new Z80_opcode_info(0x34, Z80_MN.SLL_irr_r, '', 'addr', 'H'),
    0x35: new Z80_opcode_info(0x35, Z80_MN.SLL_irr_r, '', 'addr', 'L'),
    0x36: new Z80_opcode_info(0x36, Z80_MN.SLL_irr_r, '', 'addr', '_'),
    0x37: new Z80_opcode_info(0x37, Z80_MN.SLL_irr_r, '', 'addr', 'A'),
    0x38: new Z80_opcode_info(0x38, Z80_MN.SRL_irr_r, '', 'addr', 'B'),
    0x39: new Z80_opcode_info(0x39, Z80_MN.SRL_irr_r, '', 'addr', 'C'),
    0x3A: new Z80_opcode_info(0x3A, Z80_MN.SRL_irr_r, '', 'addr', 'D'),
    0x3B: new Z80_opcode_info(0x3B, Z80_MN.SRL_irr_r, '', 'addr', 'E'),
    0x3C: new Z80_opcode_info(0x3C, Z80_MN.SRL_irr_r, '', 'addr', 'H'),
    0x3D: new Z80_opcode_info(0x3D, Z80_MN.SRL_irr_r, '', 'addr', 'L'),
    0x3E: new Z80_opcode_info(0x3E, Z80_MN.SRL_irr_r, '', 'addr', '_'),
    0x3F: new Z80_opcode_info(0x3F, Z80_MN.SRL_irr_r, '', 'addr', 'A'),

    0x40: new Z80_opcode_info(0x40, Z80_MN.BIT_o_irr_r, '', '0','addr', 'B'),
    0x41: new Z80_opcode_info(0x41, Z80_MN.BIT_o_irr_r, '', '0', 'addr', 'C'),
    0x42: new Z80_opcode_info(0x42, Z80_MN.BIT_o_irr_r, '', '0', 'addr', 'D'),
    0x43: new Z80_opcode_info(0x43, Z80_MN.BIT_o_irr_r, '', '0', 'addr', 'E'),
    0x44: new Z80_opcode_info(0x44, Z80_MN.BIT_o_irr_r, '', '0', 'addr', 'H'),
    0x45: new Z80_opcode_info(0x45, Z80_MN.BIT_o_irr_r, '', '0', 'addr', 'L'),
    0x46: new Z80_opcode_info(0x46, Z80_MN.BIT_o_irr_r, '', '0', 'addr', '_'),
    0x47: new Z80_opcode_info(0x47, Z80_MN.BIT_o_irr_r, '', '0', 'addr', 'A'),
    0x48: new Z80_opcode_info(0x48, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'B'),
    0x49: new Z80_opcode_info(0x49, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'C'),
    0x4A: new Z80_opcode_info(0x4A, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'D'),
    0x4B: new Z80_opcode_info(0x4B, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'E'),
    0x4C: new Z80_opcode_info(0x4C, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'H'),
    0x4D: new Z80_opcode_info(0x4D, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'L'),
    0x4E: new Z80_opcode_info(0x4E, Z80_MN.BIT_o_irr_r, '', '1', 'addr', '_'),
    0x4F: new Z80_opcode_info(0x4F, Z80_MN.BIT_o_irr_r, '', '1', 'addr', 'A'),

    0x50: new Z80_opcode_info(0x50, Z80_MN.BIT_o_irr_r, '', '2','addr', 'B'),
    0x51: new Z80_opcode_info(0x51, Z80_MN.BIT_o_irr_r, '', '2', 'addr', 'C'),
    0x52: new Z80_opcode_info(0x52, Z80_MN.BIT_o_irr_r, '', '2', 'addr', 'D'),
    0x53: new Z80_opcode_info(0x53, Z80_MN.BIT_o_irr_r, '', '2', 'addr', 'E'),
    0x54: new Z80_opcode_info(0x54, Z80_MN.BIT_o_irr_r, '', '2', 'addr', 'H'),
    0x55: new Z80_opcode_info(0x55, Z80_MN.BIT_o_irr_r, '', '2', 'addr', 'L'),
    0x56: new Z80_opcode_info(0x56, Z80_MN.BIT_o_irr_r, '', '2', 'addr', '_'),
    0x57: new Z80_opcode_info(0x57, Z80_MN.BIT_o_irr_r, '', '2', 'addr', 'A'),
    0x58: new Z80_opcode_info(0x58, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'B'),
    0x59: new Z80_opcode_info(0x59, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'C'),
    0x5A: new Z80_opcode_info(0x5A, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'D'),
    0x5B: new Z80_opcode_info(0x5B, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'E'),
    0x5C: new Z80_opcode_info(0x5C, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'H'),
    0x5D: new Z80_opcode_info(0x5D, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'L'),
    0x5E: new Z80_opcode_info(0x5E, Z80_MN.BIT_o_irr_r, '', '3', 'addr', '_'),
    0x5F: new Z80_opcode_info(0x5F, Z80_MN.BIT_o_irr_r, '', '3', 'addr', 'A'),

    0x60: new Z80_opcode_info(0x60, Z80_MN.BIT_o_irr_r, '', '4','addr', 'B'),
    0x61: new Z80_opcode_info(0x61, Z80_MN.BIT_o_irr_r, '', '4', 'addr', 'C'),
    0x62: new Z80_opcode_info(0x62, Z80_MN.BIT_o_irr_r, '', '4', 'addr', 'D'),
    0x63: new Z80_opcode_info(0x63, Z80_MN.BIT_o_irr_r, '', '4', 'addr', 'E'),
    0x64: new Z80_opcode_info(0x64, Z80_MN.BIT_o_irr_r, '', '4', 'addr', 'H'),
    0x65: new Z80_opcode_info(0x65, Z80_MN.BIT_o_irr_r, '', '4', 'addr', 'L'),
    0x66: new Z80_opcode_info(0x66, Z80_MN.BIT_o_irr_r, '', '4', 'addr', '_'),
    0x67: new Z80_opcode_info(0x67, Z80_MN.BIT_o_irr_r, '', '4', 'addr', 'A'),
    0x68: new Z80_opcode_info(0x68, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'B'),
    0x69: new Z80_opcode_info(0x69, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'C'),
    0x6A: new Z80_opcode_info(0x6A, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'D'),
    0x6B: new Z80_opcode_info(0x6B, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'E'),
    0x6C: new Z80_opcode_info(0x6C, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'H'),
    0x6D: new Z80_opcode_info(0x6D, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'L'),
    0x6E: new Z80_opcode_info(0x6E, Z80_MN.BIT_o_irr_r, '', '5', 'addr', '_'),
    0x6F: new Z80_opcode_info(0x6F, Z80_MN.BIT_o_irr_r, '', '5', 'addr', 'A'),

    0x70: new Z80_opcode_info(0x70, Z80_MN.BIT_o_irr_r, '', '6','addr', 'B'),
    0x71: new Z80_opcode_info(0x71, Z80_MN.BIT_o_irr_r, '', '6', 'addr', 'C'),
    0x72: new Z80_opcode_info(0x72, Z80_MN.BIT_o_irr_r, '', '6', 'addr', 'D'),
    0x73: new Z80_opcode_info(0x73, Z80_MN.BIT_o_irr_r, '', '6', 'addr', 'E'),
    0x74: new Z80_opcode_info(0x74, Z80_MN.BIT_o_irr_r, '', '6', 'addr', 'H'),
    0x75: new Z80_opcode_info(0x75, Z80_MN.BIT_o_irr_r, '', '6', 'addr', 'L'),
    0x76: new Z80_opcode_info(0x76, Z80_MN.BIT_o_irr_r, '', '6', 'addr', '_'),
    0x77: new Z80_opcode_info(0x77, Z80_MN.BIT_o_irr_r, '', '6', 'addr', 'A'),
    0x78: new Z80_opcode_info(0x78, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'B'),
    0x79: new Z80_opcode_info(0x79, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'C'),
    0x7A: new Z80_opcode_info(0x7A, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'D'),
    0x7B: new Z80_opcode_info(0x7B, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'E'),
    0x7C: new Z80_opcode_info(0x7C, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'H'),
    0x7D: new Z80_opcode_info(0x7D, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'L'),
    0x7E: new Z80_opcode_info(0x7E, Z80_MN.BIT_o_irr_r, '', '7', 'addr', '_'),
    0x7F: new Z80_opcode_info(0x7F, Z80_MN.BIT_o_irr_r, '', '7', 'addr', 'A'),

    0x80: new Z80_opcode_info(0x80, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'B'),
    0x81: new Z80_opcode_info(0x81, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'C'),
    0x82: new Z80_opcode_info(0x82, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'D'),
    0x83: new Z80_opcode_info(0x83, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'E'),
    0x84: new Z80_opcode_info(0x84, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'H'),
    0x85: new Z80_opcode_info(0x85, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'L'),
    0x86: new Z80_opcode_info(0x86, Z80_MN.RES_o_irr_r, '', '0', 'addr', '_'),
    0x87: new Z80_opcode_info(0x87, Z80_MN.RES_o_irr_r, '', '0', 'addr', 'A'),
    0x88: new Z80_opcode_info(0x88, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'B'),
    0x89: new Z80_opcode_info(0x89, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'C'),
    0x8A: new Z80_opcode_info(0x8A, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'D'),
    0x8B: new Z80_opcode_info(0x8B, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'E'),
    0x8C: new Z80_opcode_info(0x8C, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'H'),
    0x8D: new Z80_opcode_info(0x8D, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'L'),
    0x8E: new Z80_opcode_info(0x8E, Z80_MN.RES_o_irr_r, '', '1', 'addr', '_'),
    0x8F: new Z80_opcode_info(0x8F, Z80_MN.RES_o_irr_r, '', '1', 'addr', 'A'),

    0x90: new Z80_opcode_info(0x90, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'B'),
    0x91: new Z80_opcode_info(0x91, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'C'),
    0x92: new Z80_opcode_info(0x92, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'D'),
    0x93: new Z80_opcode_info(0x93, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'E'),
    0x94: new Z80_opcode_info(0x94, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'H'),
    0x95: new Z80_opcode_info(0x95, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'L'),
    0x96: new Z80_opcode_info(0x96, Z80_MN.RES_o_irr_r, '', '2', 'addr', '_'),
    0x97: new Z80_opcode_info(0x97, Z80_MN.RES_o_irr_r, '', '2', 'addr', 'A'),
    0x98: new Z80_opcode_info(0x98, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'B'),
    0x99: new Z80_opcode_info(0x99, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'C'),
    0x9A: new Z80_opcode_info(0x9A, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'D'),
    0x9B: new Z80_opcode_info(0x9B, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'E'),
    0x9C: new Z80_opcode_info(0x9C, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'H'),
    0x9D: new Z80_opcode_info(0x9D, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'L'),
    0x9E: new Z80_opcode_info(0x9E, Z80_MN.RES_o_irr_r, '', '3', 'addr', '_'),
    0x9F: new Z80_opcode_info(0x9F, Z80_MN.RES_o_irr_r, '', '3', 'addr', 'A'),

    0xA0: new Z80_opcode_info(0xA0, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'B'),
    0xA1: new Z80_opcode_info(0xA1, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'C'),
    0xA2: new Z80_opcode_info(0xA2, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'D'),
    0xA3: new Z80_opcode_info(0xA3, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'E'),
    0xA4: new Z80_opcode_info(0xA4, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'H'),
    0xA5: new Z80_opcode_info(0xA5, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'L'),
    0xA6: new Z80_opcode_info(0xA6, Z80_MN.RES_o_irr_r, '', '4', 'addr', '_'),
    0xA7: new Z80_opcode_info(0xA7, Z80_MN.RES_o_irr_r, '', '4', 'addr', 'A'),
    0xA8: new Z80_opcode_info(0xA8, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'B'),
    0xA9: new Z80_opcode_info(0xA9, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'C'),
    0xAA: new Z80_opcode_info(0xAA, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'D'),
    0xAB: new Z80_opcode_info(0xAB, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'E'),
    0xAC: new Z80_opcode_info(0xAC, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'H'),
    0xAD: new Z80_opcode_info(0xAD, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'L'),
    0xAE: new Z80_opcode_info(0xAE, Z80_MN.RES_o_irr_r, '', '5', 'addr', '_'),
    0xAF: new Z80_opcode_info(0xAF, Z80_MN.RES_o_irr_r, '', '5', 'addr', 'A'),

    0xB0: new Z80_opcode_info(0xB0, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'B'),
    0xB1: new Z80_opcode_info(0xB1, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'C'),
    0xB2: new Z80_opcode_info(0xB2, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'D'),
    0xB3: new Z80_opcode_info(0xB3, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'E'),
    0xB4: new Z80_opcode_info(0xB4, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'H'),
    0xB5: new Z80_opcode_info(0xB5, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'L'),
    0xB6: new Z80_opcode_info(0xB6, Z80_MN.RES_o_irr_r, '', '6', 'addr', '_'),
    0xB7: new Z80_opcode_info(0xB7, Z80_MN.RES_o_irr_r, '', '6', 'addr', 'A'),
    0xB8: new Z80_opcode_info(0xB8, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'B'),
    0xB9: new Z80_opcode_info(0xB9, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'C'),
    0xBA: new Z80_opcode_info(0xBA, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'D'),
    0xBB: new Z80_opcode_info(0xBB, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'E'),
    0xBC: new Z80_opcode_info(0xBC, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'H'),
    0xBD: new Z80_opcode_info(0xBD, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'L'),
    0xBE: new Z80_opcode_info(0xBE, Z80_MN.RES_o_irr_r, '', '7', 'addr', '_'),
    0xBF: new Z80_opcode_info(0xBF, Z80_MN.RES_o_irr_r, '', '7', 'addr', 'A'),

    0xC0: new Z80_opcode_info(0xC0, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'B'),
    0xC1: new Z80_opcode_info(0xC1, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'C'),
    0xC2: new Z80_opcode_info(0xC2, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'D'),
    0xC3: new Z80_opcode_info(0xC3, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'E'),
    0xC4: new Z80_opcode_info(0xC4, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'H'),
    0xC5: new Z80_opcode_info(0xC5, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'L'),
    0xC6: new Z80_opcode_info(0xC6, Z80_MN.SET_o_irr_r, '', '0', 'addr', '_'),
    0xC7: new Z80_opcode_info(0xC7, Z80_MN.SET_o_irr_r, '', '0', 'addr', 'A'),
    0xC8: new Z80_opcode_info(0xC8, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'B'),
    0xC9: new Z80_opcode_info(0xC9, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'C'),
    0xCA: new Z80_opcode_info(0xCA, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'D'),
    0xCB: new Z80_opcode_info(0xCB, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'E'),
    0xCC: new Z80_opcode_info(0xCC, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'H'),
    0xCD: new Z80_opcode_info(0xCD, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'L'),
    0xCE: new Z80_opcode_info(0xCE, Z80_MN.SET_o_irr_r, '', '1', 'addr', '_'),
    0xCF: new Z80_opcode_info(0xCF, Z80_MN.SET_o_irr_r, '', '1', 'addr', 'A'),

    0xD0: new Z80_opcode_info(0xD0, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'B'),
    0xD1: new Z80_opcode_info(0xD1, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'C'),
    0xD2: new Z80_opcode_info(0xD2, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'D'),
    0xD3: new Z80_opcode_info(0xD3, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'E'),
    0xD4: new Z80_opcode_info(0xD4, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'H'),
    0xD5: new Z80_opcode_info(0xD5, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'L'),
    0xD6: new Z80_opcode_info(0xD6, Z80_MN.SET_o_irr_r, '', '2', 'addr', '_'),
    0xD7: new Z80_opcode_info(0xD7, Z80_MN.SET_o_irr_r, '', '2', 'addr', 'A'),
    0xD8: new Z80_opcode_info(0xD8, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'B'),
    0xD9: new Z80_opcode_info(0xD9, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'C'),
    0xDA: new Z80_opcode_info(0xDA, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'D'),
    0xDB: new Z80_opcode_info(0xDB, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'E'),
    0xDC: new Z80_opcode_info(0xDC, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'H'),
    0xDD: new Z80_opcode_info(0xDD, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'L'),
    0xDE: new Z80_opcode_info(0xDE, Z80_MN.SET_o_irr_r, '', '3', 'addr', '_'),
    0xDF: new Z80_opcode_info(0xDF, Z80_MN.SET_o_irr_r, '', '3', 'addr', 'A'),

    0xE0: new Z80_opcode_info(0xE0, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'B'),
    0xE1: new Z80_opcode_info(0xE1, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'C'),
    0xE2: new Z80_opcode_info(0xE2, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'D'),
    0xE3: new Z80_opcode_info(0xE3, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'E'),
    0xE4: new Z80_opcode_info(0xE4, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'H'),
    0xE5: new Z80_opcode_info(0xE5, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'L'),
    0xE6: new Z80_opcode_info(0xE6, Z80_MN.SET_o_irr_r, '', '4', 'addr', '_'),
    0xE7: new Z80_opcode_info(0xE7, Z80_MN.SET_o_irr_r, '', '4', 'addr', 'A'),
    0xE8: new Z80_opcode_info(0xE8, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'B'),
    0xE9: new Z80_opcode_info(0xE9, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'C'),
    0xEA: new Z80_opcode_info(0xEA, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'D'),
    0xEB: new Z80_opcode_info(0xEB, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'E'),
    0xEC: new Z80_opcode_info(0xEC, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'H'),
    0xED: new Z80_opcode_info(0xED, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'L'),
    0xEE: new Z80_opcode_info(0xEE, Z80_MN.SET_o_irr_r, '', '5', 'addr', '_'),
    0xEF: new Z80_opcode_info(0xEF, Z80_MN.SET_o_irr_r, '', '5', 'addr', 'A'),

    0xF0: new Z80_opcode_info(0xF0, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'B'),
    0xF1: new Z80_opcode_info(0xF1, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'C'),
    0xF2: new Z80_opcode_info(0xF2, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'D'),
    0xF3: new Z80_opcode_info(0xF3, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'E'),
    0xF4: new Z80_opcode_info(0xF4, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'H'),
    0xF5: new Z80_opcode_info(0xF5, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'L'),
    0xF6: new Z80_opcode_info(0xF6, Z80_MN.SET_o_irr_r, '', '6', 'addr', '_'),
    0xF7: new Z80_opcode_info(0xF7, Z80_MN.SET_o_irr_r, '', '6', 'addr', 'A'),
    0xF8: new Z80_opcode_info(0xF8, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'B'),
    0xF9: new Z80_opcode_info(0xF9, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'C'),
    0xFA: new Z80_opcode_info(0xFA, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'D'),
    0xFB: new Z80_opcode_info(0xFB, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'E'),
    0xFC: new Z80_opcode_info(0xFC, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'H'),
    0xFD: new Z80_opcode_info(0xFD, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'L'),
    0xFE: new Z80_opcode_info(0xFE, Z80_MN.SET_o_irr_r, '', '7', 'addr', '_'),
    0xFF: new Z80_opcode_info(0xFF, Z80_MN.SET_o_irr_r, '', '7', 'addr', 'A'),
};
const Z80_CBd_opcode_matrix = Object.freeze(Z80_fill_mnemonics(Z80_CBd_opcode_matrix_premn));



const Z80_ED_opcode_matrix_premn = {
    0x40: new Z80_opcode_info(0x40, Z80_MN.IN_r_ic, '', 'B'),
    0x41: new Z80_opcode_info(0x41, Z80_MN.OUT_ic_r, '', 'B'),
    0x42: new Z80_opcode_info(0x42, Z80_MN.SBC_hl_rr, '', 'BC'),
    0x43: new Z80_opcode_info(0x43, Z80_MN.LD_inn_rr, '', 'BC'),
    0x44: new Z80_opcode_info(0x44, Z80_MN.NEG, 'NEG'),
    0x45: new Z80_opcode_info(0x45, Z80_MN.RETN, 'RETN'),
    0x46: new Z80_opcode_info(0x46, Z80_MN.IM_o, '', '0'),
    0x47: new Z80_opcode_info(0x47, Z80_MN.LD_r_r1, '', 'I', 'A'),
    0x48: new Z80_opcode_info(0x48, Z80_MN.IN_r_ic, '', 'C'),
    0x49: new Z80_opcode_info(0x49, Z80_MN.OUT_ic_r, '', 'C'),
    0x4A: new Z80_opcode_info(0x4A, Z80_MN.ADC_hl_rr, '', 'BC'),
    0x4B: new Z80_opcode_info(0x4B, Z80_MN.LD_rr_inn, '', 'BC'),
    0x4C: new Z80_opcode_info(0x4C, Z80_MN.NEG, 'NEG'),
    0x4D: new Z80_opcode_info(0x4D, Z80_MN.RETI, 'RETI'),
    0x4E: new Z80_opcode_info(0x4E, Z80_MN.IM_o, '', '0'),
    0x4F: new Z80_opcode_info(0x4F, Z80_MN.LD_r_r1, '', 'R', 'A'),

    0x50: new Z80_opcode_info(0x50, Z80_MN.IN_r_ic, '', 'D'),
    0x51: new Z80_opcode_info(0x51, Z80_MN.OUT_ic_r, '', 'D'),
    0x52: new Z80_opcode_info(0x52, Z80_MN.SBC_hl_rr, '', 'DE'),
    0x53: new Z80_opcode_info(0x53, Z80_MN.LD_inn_rr, '', 'DE'),
    0x54: new Z80_opcode_info(0x54, Z80_MN.NEG, 'NEG'),
    0x55: new Z80_opcode_info(0x55, Z80_MN.RETN, 'RETN'),
    0x56: new Z80_opcode_info(0x56, Z80_MN.IM_o, '', '1'),
    0x57: new Z80_opcode_info(0x57, Z80_MN.LD_r_r2, '', 'A', 'I'),
    0x58: new Z80_opcode_info(0x58, Z80_MN.IN_r_ic, '', 'E'),
    0x59: new Z80_opcode_info(0x59, Z80_MN.OUT_ic_r, '', 'E'),
    0x5A: new Z80_opcode_info(0x5A, Z80_MN.ADC_hl_rr, '', 'DE'),
    0x5B: new Z80_opcode_info(0x5B, Z80_MN.LD_rr_inn, '', 'DE'),
    0x5C: new Z80_opcode_info(0x5C, Z80_MN.NEG, 'NEG'),
    0x5D: new Z80_opcode_info(0x5D, Z80_MN.RETI, 'RETI'),
    0x5E: new Z80_opcode_info(0x5E, Z80_MN.IM_o, '', '2'),
    0x5F: new Z80_opcode_info(0x5F, Z80_MN.LD_r_r2, '', 'A', 'R'),

    0x60: new Z80_opcode_info(0x60, Z80_MN.IN_r_ic, '', 'H'),
    0x61: new Z80_opcode_info(0x61, Z80_MN.OUT_ic_r, '', 'H'),
    0x62: new Z80_opcode_info(0x62, Z80_MN.SBC_hl_rr, '', 'HL'),
    0x63: new Z80_opcode_info(0x63, Z80_MN.LD_inn_rr, '', 'HL'),
    0x64: new Z80_opcode_info(0x64, Z80_MN.NEG, 'NEG'),
    0x65: new Z80_opcode_info(0x65, Z80_MN.RETN, 'RETN'),
    0x66: new Z80_opcode_info(0x66, Z80_MN.IM_o, '', '0'),
    0x67: new Z80_opcode_info(0x67, Z80_MN.RRD, 'RRD', 'HL'),
    0x68: new Z80_opcode_info(0x68, Z80_MN.IN_r_ic, '', 'L'),
    0x69: new Z80_opcode_info(0x69, Z80_MN.OUT_ic_r, '', 'L'),
    0x6A: new Z80_opcode_info(0x6A, Z80_MN.ADC_hl_rr, '', 'HL'),
    0x6B: new Z80_opcode_info(0x6B, Z80_MN.LD_rr_inn, '', 'HL'),
    0x6C: new Z80_opcode_info(0x6C, Z80_MN.NEG, 'NEG'),
    0x6D: new Z80_opcode_info(0x6D, Z80_MN.RETI, 'RETI'),
    0x6E: new Z80_opcode_info(0x6E, Z80_MN.IM_o, '', '0'),
    0x6F: new Z80_opcode_info(0x6F, Z80_MN.RLD, 'RLD', 'HL'),

    0x70: new Z80_opcode_info(0x70, Z80_MN.IN_ic, ''),
    0x71: new Z80_opcode_info(0x71, Z80_MN.OUT_ic, ''),
    0x72: new Z80_opcode_info(0x72, Z80_MN.SBC_hl_rr, '', 'SP'),
    0x73: new Z80_opcode_info(0x73, Z80_MN.LD_inn_rr, '', 'SP'),
    0x74: new Z80_opcode_info(0x74, Z80_MN.NEG, 'NEG'),
    0x75: new Z80_opcode_info(0x75, Z80_MN.RETN, 'RETN'),
    0x76: new Z80_opcode_info(0x76, Z80_MN.IM_o, '', '1'),
    0x77: new Z80_opcode_info(0x77, Z80_MN.NOP, 'NOP'),
    0x78: new Z80_opcode_info(0x78, Z80_MN.IN_r_ic, '', 'A'),
    0x79: new Z80_opcode_info(0x79, Z80_MN.OUT_ic_r, '', 'A'),
    0x7A: new Z80_opcode_info(0x7A, Z80_MN.ADC_hl_rr, '', 'SP'),
    0x7B: new Z80_opcode_info(0x7B, Z80_MN.LD_rr_inn, '', 'SP'),
    0x7C: new Z80_opcode_info(0x7C, Z80_MN.NEG, 'NEG'),
    0x7D: new Z80_opcode_info(0x7D, Z80_MN.RETI, 'RETI'),
    0x7E: new Z80_opcode_info(0x7E, Z80_MN.IM_o, '', '2'),
    0x7F: new Z80_opcode_info(0x7F, Z80_MN.NOP, 'NOP'),

    0xA0: new Z80_opcode_info(0xA0, Z80_MN.LDI, 'LDI'),
    0xA1: new Z80_opcode_info(0xA1, Z80_MN.CPI, 'CPI'),
    0xA2: new Z80_opcode_info(0xA2, Z80_MN.INI, 'INI'),
    0xA3: new Z80_opcode_info(0xA3, Z80_MN.OUTI, 'OUTI'),
    0xA8: new Z80_opcode_info(0xA8, Z80_MN.LDD, 'LDD'),
    0xA9: new Z80_opcode_info(0xA9, Z80_MN.CPD, 'CPD'),
    0xAA: new Z80_opcode_info(0xAA, Z80_MN.IND, 'IND'),
    0xAB: new Z80_opcode_info(0xAB, Z80_MN.OUTD, 'OUTD'),

    0xB0: new Z80_opcode_info(0xB0, Z80_MN.LDIR, 'LDIR'),
    0xB1: new Z80_opcode_info(0xB1, Z80_MN.CPIR, 'CPIR'),
    0xB2: new Z80_opcode_info(0xB2, Z80_MN.INIR, 'INIR'),
    0xB3: new Z80_opcode_info(0xB3, Z80_MN.OTIR, 'OTIR'),
    0xB8: new Z80_opcode_info(0xB8, Z80_MN.LDDR, 'LDDR'),
    0xB9: new Z80_opcode_info(0xB9, Z80_MN.CPDR, 'CPDR'),
    0xBA: new Z80_opcode_info(0xBA, Z80_MN.INDR, 'INDR'),
    0xBB: new Z80_opcode_info(0xBB, Z80_MN.OTDR, 'OTDR'),
};

class Z80_opcode_functions {
    constructor(opcode_info, exec_func) {
        this.opcode = opcode_info.opcode;
        this.ins = opcode_info.ins;
        this.mnemonic = opcode_info.mnemonic;
        this.exec_func = exec_func;
    }
}

const Z80_S_IRQ = 0x100;
const Z80_S_RESET = 0x101;
// SPECIAL #. This is above Z80_MAX because it is special-case handled by cycle()
const Z80_S_DECODE = 0x102;

const Z80_MAX_OPCODE = 0x101;
const Z80_prefixes = [0, 0xCB, 0xDD, 0xED, 0xFD, 0xDDCB, 0xFDCB]
const Z80_prefix_to_codemap = Object.freeze({
    [Z80_prefixes[0]]: 0x00,
    [Z80_prefixes[1]]: (Z80_MAX_OPCODE + 1),
    [Z80_prefixes[2]]: (Z80_MAX_OPCODE + 1) * 2,
    [Z80_prefixes[3]]: (Z80_MAX_OPCODE + 1) * 3,
    [Z80_prefixes[4]]: (Z80_MAX_OPCODE + 1) * 4,
    [Z80_prefixes[5]]: (Z80_MAX_OPCODE + 1) * 5,
    [Z80_prefixes[6]]: (Z80_MAX_OPCODE + 1) * 6,
});

const Z80_ED_opcode_matrix = Object.freeze(Z80_fill_mnemonics(Z80_ED_opcode_matrix_premn));



function Z80_fetch_decoded(opcode, prefix) {
    let r = z80_decoded_opcodes[Z80_prefix_to_codemap[prefix] + opcode];
    return r;
}