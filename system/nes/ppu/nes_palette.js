"use strict";

const NES_palette = new Uint32Array([
  0xFF525252, 0xFF511A01, 0xFF650F0F, 0xFF630623, 0xFF4B0336, 0xFF260440, 0xFF04093F, 0xFF001332, 0xFF00201F, 0xFF002A0B, 0xFF002F00, 0xFF0A2E00, 0xFF2D2600, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFFA0A0A0, 0xFF9D4A1E, 0xFFBC3738, 0xFFB82858, 0xFF942175, 0xFF5C2384, 0xFF242E82, 0xFF003F6F, 0xFF005251, 0xFF006331, 0xFF056B1A, 0xFF2E690E, 0xFF685C10, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFFFFFFFE, 0xFFFC9E69, 0xFFFF8789, 0xFFFF76AE, 0xFFF16DCE, 0xFFB270E0, 0xFF707CDE, 0xFF3E91C8, 0xFF25A7A6, 0xFF28BA81, 0xFF46C463, 0xFF7DC154, 0xFFC0B356, 0xFF3C3C3C, 0xFF000000, 0xFF000000,
  0xFFFFFFFE, 0xFFFDD6BE, 0xFFFFCCCC, 0xFFFFC4DD, 0xFFF9C0EA, 0xFFDFC1F2, 0xFFC2C7F1, 0xFFAAD0E8, 0xFF9DDAD9, 0xFF9EE2C9, 0xFFAEE6BC, 0xFFC7E5B4, 0xFFE4DFB5, 0xFFA9A9A9, 0xFF000000, 0xFF000000,
  0xFF32344B, 0xFF2E0700, 0xFF41010B, 0xFF42001D, 0xFF310030, 0xFF16003B, 0xFF00033D, 0xFF00092F, 0xFF00101C, 0xFF001609, 0xFF001800, 0xFF001500, 0xFF110D00, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF6C7194, 0xFF672717, 0xFF841C30, 0xFF85134F, 0xFF6B116B, 0xFF41157C, 0xFF16217E, 0xFF002C6A, 0xFF00384C, 0xFF00422D, 0xFF004516, 0xFF10400A, 0xFF393208, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFFB5BCEE, 0xFFB0675D, 0xFFCF597C, 0xFFD14FA0, 0xFFB44BC0, 0xFF8451D3, 0xFF5160D6, 0xFF256DBF, 0xFF0F7B9D, 0xFF0E8779, 0xFF228A5C, 0xFF49844B, 0xFF7B7549, 0xFF212336, 0xFF000000, 0xFF000000,
  0xFFB5BCEE, 0xFFB398AF, 0xFFC091BD, 0xFFC08DCD, 0xFFB58BDB, 0xFFA18EE3, 0xFF8A94E4, 0xFF759ADA, 0xFF69A1CC, 0xFF69A5BC, 0xFF74A7AF, 0xFF86A4A7, 0xFF9D9EA6, 0xFF73789D, 0xFF000000, 0xFF000000,
  0xFF27452E, 0xFF2C1300, 0xFF3A0700, 0xFF35000A, 0xFF200015, 0xFF08001F, 0xFF000321, 0xFF000D19, 0xFF00190C, 0xFF002501, 0xFF002C00, 0xFF002800, 0xFF131F00, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF5C8B67, 0xFF643D08, 0xFF792A18, 0xFF721A2D, 0xFF511240, 0xFF291650, 0xFF042252, 0xFF003446, 0xFF004831, 0xFF00591C, 0xFF00640C, 0xFF135E02, 0xFF3D5001, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF9DE1AE, 0xFFA6893C, 0xFFBD7252, 0xFFB65F6C, 0xFF925481, 0xFF645A94, 0xFF346896, 0xFF127E89, 0xFF049571, 0xFF08A956, 0xFF21B642, 0xFF48AF33, 0xFF7A9F31, 0xFF18311E, 0xFF000000, 0xFF000000,
  0xFF9DE1AE, 0xFFA1BB7D, 0xFFAAB186, 0xFFA7A992, 0xFF99A49B, 0xFF85A7A3, 0xFF70ADA4, 0xFF5FB79E, 0xFF56C194, 0xFF59CA89, 0xFF66CF7F, 0xFF79CC78, 0xFF8FC577, 0xFF62936E, 0xFF000000, 0xFF000000,
  0xFF1E2E2D, 0xFF210400, 0xFF2F0000, 0xFF2D000A, 0xFF1D0015, 0xFF06001F, 0xFF000020, 0xFF000518, 0xFF000C0B, 0xFF001300, 0xFF001600, 0xFF001300, 0xFF0C0B00, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF4D6666, 0xFF522307, 0xFF671718, 0xFF640E2C, 0xFF4C093F, 0xFF250D4F, 0xFF021851, 0xFF002444, 0xFF003130, 0xFF003C1B, 0xFF00420B, 0xFF093C01, 0xFF2F2F00, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF89ACAC, 0xFF8E5F3B, 0xFFA55051, 0xFFA2446A, 0xFF873E80, 0xFF5A4493, 0xFF2C5295, 0xFF0D6086, 0xFF01706E, 0xFF027D55, 0xFF128340, 0xFF367D31, 0xFF666E2F, 0xFF111D1D, 0xFF000000, 0xFF000000,
  0xFF89ACAC, 0xFF8B8B7B, 0xFF948585, 0xFF937F90, 0xFF887D9A, 0xFF757FA1, 0xFF6085A2, 0xFF518C9C, 0xFF489392, 0xFF499886, 0xFF539B7D, 0xFF659876, 0xFF7A9275, 0xFF536C6C, 0xFF000000, 0xFF000000,
  0xFF593737, 0xFF530F00, 0xFF680809, 0xFF630017, 0xFF4B0024, 0xFF28002A, 0xFF070026, 0xFF00031A, 0xFF000A09, 0xFF001300, 0xFF001A00, 0xFF0E1B00, 0xFF311700, 0xFF000000, 0xFF010000, 0xFF010000,
  0xFFAB7575, 0xFFA13713, 0xFFC02A2C, 0xFFB81B43, 0xFF941357, 0xFF5F1261, 0xFF2A175B, 0xFF062148, 0xFF002D2C, 0xFF003D17, 0xFF0D4808, 0xFF374903, 0xFF6E4306, 0xFF010000, 0xFF010000, 0xFF010000,
  0xFFFFC1C2, 0xFFFF7B50, 0xFFFF6C6E, 0xFFFF5A89, 0xFFF54FA0, 0xFFBA4DAB, 0xFF7B54A5, 0xFF4A618F, 0xFF306F6F, 0xFF368355, 0xFF558E40, 0xFF8A9038, 0xFFCA893D, 0xFF422525, 0xFF010000, 0xFF010000,
  0xFFFFC1C2, 0xFFFFA491, 0xFFFF9D9F, 0xFFFF95AA, 0xFFFF90B4, 0xFFEA8FB9, 0xFFCF92B6, 0xFFB898AD, 0xFFAB9F9F, 0xFFAEA793, 0xFFBDAC8A, 0xFFD6AD86, 0xFFF1AA88, 0xFFB47C7D, 0xFF010000, 0xFF010000,
  0xFF352732, 0xFF2F0400, 0xFF430005, 0xFF410012, 0xFF30001E, 0xFF170025, 0xFF010024, 0xFF000018, 0xFF000608, 0xFF000C00, 0xFF000F00, 0xFF000E00, 0xFF120A00, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF735B6D, 0xFF69210D, 0xFF861625, 0xFF840D3B, 0xFF6A094F, 0xFF430A5A, 0xFF1B1058, 0xFF001A45, 0xFF00262A, 0xFF003015, 0xFF003606, 0xFF143400, 0xFF3B2C01, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFFBE9DB6, 0xFFB45A45, 0xFFD44C63, 0xFFD1407D, 0xFFB53B94, 0xFF883CA0, 0xFF59459F, 0xFF2C5189, 0xFF155F69, 0xFF166C50, 0xFF2B723C, 0xFF517031, 0xFF7F6733, 0xFF241821, 0xFF000000, 0xFF000000,
  0xFFBE9DB6, 0xFFBA8185, 0xFFC77A93, 0xFFC6759E, 0xFFBA72A8, 0xFFA873AD, 0xFF9377AC, 0xFF7E7DA3, 0xFF718395, 0xFF72888A, 0xFF7D8B81, 0xFF8F8A7C, 0xFFA3867C, 0xFF7A6273, 0xFF000000, 0xFF000000,
  0xFF302F24, 0xFF2F0A00, 0xFF3D0300, 0xFF390007, 0xFF230012, 0xFF0C0019, 0xFF000018, 0xFF000110, 0xFF000805, 0xFF001100, 0xFF001700, 0xFF011600, 0xFF171100, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF6A6857, 0xFF682D04, 0xFF7E2014, 0xFF771228, 0xFF560A3B, 0xFF300B45, 0xFF0C1244, 0xFF001D37, 0xFF002923, 0xFF00390F, 0xFF014402, 0xFF1C4200, 0xFF433900, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFFB2AF97, 0xFFB06B33, 0xFFC85C48, 0xFFC04A61, 0xFF9B3F77, 0xFF704183, 0xFF434A81, 0xFF215872, 0xFF11675B, 0xFF167A42, 0xFF31862F, 0xFF578425, 0xFF867A27, 0xFF201E16, 0xFF000000, 0xFF000000,
  0xFFB2AF97, 0xFFB1926B, 0xFFBB8C75, 0xFFB88380, 0xFFA97F89, 0xFF967F8E, 0xFF82838E, 0xFF728A88, 0xFF69917E, 0xFF6C9973, 0xFF7A9E6A, 0xFF8B9D65, 0xFFA09965, 0xFF716E5D, 0xFF000000, 0xFF000000,
  0xFF252525, 0xFF230300, 0xFF310000, 0xFF2F0007, 0xFF200012, 0xFF090019, 0xFF000018, 0xFF000010, 0xFF000505, 0xFF000B00, 0xFF000F00, 0xFF000E00, 0xFF0D0900, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF585858, 0xFF561F05, 0xFF6B1314, 0xFF680A28, 0xFF50063B, 0xFF2B0745, 0xFF080E44, 0xFF001837, 0xFF002424, 0xFF002F10, 0xFF003502, 0xFF0E3300, 0xFF322B00, 0xFF000000, 0xFF000000, 0xFF000000,
  0xFF989898, 0xFF965633, 0xFFAC4748, 0xFFAA3C61, 0xFF8F3677, 0xFF643883, 0xFF384081, 0xFF184E73, 0xFF095D5C, 0xFF0A6943, 0xFF1D7030, 0xFF406E26, 0xFF6D6427, 0xFF161616, 0xFF000000, 0xFF000000,
  0xFF989898, 0xFF977C6C, 0xFFA07576, 0xFF9F7081, 0xFF946D8A, 0xFF826E8F, 0xFF6E728E, 0xFF5E7888, 0xFF567F7E, 0xFF578473, 0xFF61876A, 0xFF728665, 0xFF868266, 0xFF5E5E5E, 0xFF000000, 0xFF000000,
]);
const NES_palette_reversed = new Uint32Array([
  0x525252FF, 0x011A51FF, 0x0F0F65FF, 0x230663FF, 0x36034BFF, 0x400426FF, 0x3F0904FF, 0x321300FF, 0x1F2000FF, 0x0B2A00FF, 0x002F00FF, 0x002E0AFF, 0x00262DFF, 0x000000FF, 0x000000FF, 0x000000FF,
  0xA0A0A0FF, 0x1E4A9DFF, 0x3837BCFF, 0x5828B8FF, 0x752194FF, 0x84235CFF, 0x822E24FF, 0x6F3F00FF, 0x515200FF, 0x316300FF, 0x1A6B05FF, 0x0E692EFF, 0x105C68FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0xFEFFFFFF, 0x699EFCFF, 0x8987FFFF, 0xAE76FFFF, 0xCE6DF1FF, 0xE070B2FF, 0xDE7C70FF, 0xC8913EFF, 0xA6A725FF, 0x81BA28FF, 0x63C446FF, 0x54C17DFF, 0x56B3C0FF, 0x3C3C3CFF, 0x000000FF, 0x000000FF,
  0xFEFFFFFF, 0xBED6FDFF, 0xCCCCFFFF, 0xDDC4FFFF, 0xEAC0F9FF, 0xF2C1DFFF, 0xF1C7C2FF, 0xE8D0AAFF, 0xD9DA9DFF, 0xC9E29EFF, 0xBCE6AEFF, 0xB4E5C7FF, 0xB5DFE4FF, 0xA9A9A9FF, 0x000000FF, 0x000000FF,
  0x4B3432FF, 0x00072EFF, 0x0B0141FF, 0x1D0042FF, 0x300031FF, 0x3B0016FF, 0x3D0300FF, 0x2F0900FF, 0x1C1000FF, 0x091600FF, 0x001800FF, 0x001500FF, 0x000D11FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x94716CFF, 0x172767FF, 0x301C84FF, 0x4F1385FF, 0x6B116BFF, 0x7C1541FF, 0x7E2116FF, 0x6A2C00FF, 0x4C3800FF, 0x2D4200FF, 0x164500FF, 0x0A4010FF, 0x083239FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0xEEBCB5FF, 0x5D67B0FF, 0x7C59CFFF, 0xA04FD1FF, 0xC04BB4FF, 0xD35184FF, 0xD66051FF, 0xBF6D25FF, 0x9D7B0FFF, 0x79870EFF, 0x5C8A22FF, 0x4B8449FF, 0x49757BFF, 0x362321FF, 0x000000FF, 0x000000FF,
  0xEEBCB5FF, 0xAF98B3FF, 0xBD91C0FF, 0xCD8DC0FF, 0xDB8BB5FF, 0xE38EA1FF, 0xE4948AFF, 0xDA9A75FF, 0xCCA169FF, 0xBCA569FF, 0xAFA774FF, 0xA7A486FF, 0xA69E9DFF, 0x9D7873FF, 0x000000FF, 0x000000FF,
  0x2E4527FF, 0x00132CFF, 0x00073AFF, 0x0A0035FF, 0x150020FF, 0x1F0008FF, 0x210300FF, 0x190D00FF, 0x0C1900FF, 0x012500FF, 0x002C00FF, 0x002800FF, 0x001F13FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x678B5CFF, 0x083D64FF, 0x182A79FF, 0x2D1A72FF, 0x401251FF, 0x501629FF, 0x522204FF, 0x463400FF, 0x314800FF, 0x1C5900FF, 0x0C6400FF, 0x025E13FF, 0x01503DFF, 0x000000FF, 0x000000FF, 0x000000FF,
  0xAEE19DFF, 0x3C89A6FF, 0x5272BDFF, 0x6C5FB6FF, 0x815492FF, 0x945A64FF, 0x966834FF, 0x897E12FF, 0x719504FF, 0x56A908FF, 0x42B621FF, 0x33AF48FF, 0x319F7AFF, 0x1E3118FF, 0x000000FF, 0x000000FF,
  0xAEE19DFF, 0x7DBBA1FF, 0x86B1AAFF, 0x92A9A7FF, 0x9BA499FF, 0xA3A785FF, 0xA4AD70FF, 0x9EB75FFF, 0x94C156FF, 0x89CA59FF, 0x7FCF66FF, 0x78CC79FF, 0x77C58FFF, 0x6E9362FF, 0x000000FF, 0x000000FF,
  0x2D2E1EFF, 0x000421FF, 0x00002FFF, 0x0A002DFF, 0x15001DFF, 0x1F0006FF, 0x200000FF, 0x180500FF, 0x0B0C00FF, 0x001300FF, 0x001600FF, 0x001300FF, 0x000B0CFF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x66664DFF, 0x072352FF, 0x181767FF, 0x2C0E64FF, 0x3F094CFF, 0x4F0D25FF, 0x511802FF, 0x442400FF, 0x303100FF, 0x1B3C00FF, 0x0B4200FF, 0x013C09FF, 0x002F2FFF, 0x000000FF, 0x000000FF, 0x000000FF,
  0xACAC89FF, 0x3B5F8EFF, 0x5150A5FF, 0x6A44A2FF, 0x803E87FF, 0x93445AFF, 0x95522CFF, 0x86600DFF, 0x6E7001FF, 0x557D02FF, 0x408312FF, 0x317D36FF, 0x2F6E66FF, 0x1D1D11FF, 0x000000FF, 0x000000FF,
  0xACAC89FF, 0x7B8B8BFF, 0x858594FF, 0x907F93FF, 0x9A7D88FF, 0xA17F75FF, 0xA28560FF, 0x9C8C51FF, 0x929348FF, 0x869849FF, 0x7D9B53FF, 0x769865FF, 0x75927AFF, 0x6C6C53FF, 0x000000FF, 0x000000FF,
  0x373759FF, 0x000F53FF, 0x090868FF, 0x170063FF, 0x24004BFF, 0x2A0028FF, 0x260007FF, 0x1A0300FF, 0x090A00FF, 0x001300FF, 0x001A00FF, 0x001B0EFF, 0x001731FF, 0x000000FF, 0x000001FF, 0x000001FF,
  0x7575ABFF, 0x1337A1FF, 0x2C2AC0FF, 0x431BB8FF, 0x571394FF, 0x61125FFF, 0x5B172AFF, 0x482106FF, 0x2C2D00FF, 0x173D00FF, 0x08480DFF, 0x034937FF, 0x06436EFF, 0x000001FF, 0x000001FF, 0x000001FF,
  0xC2C1FFFF, 0x507BFFFF, 0x6E6CFFFF, 0x895AFFFF, 0xA04FF5FF, 0xAB4DBAFF, 0xA5547BFF, 0x8F614AFF, 0x6F6F30FF, 0x558336FF, 0x408E55FF, 0x38908AFF, 0x3D89CAFF, 0x252542FF, 0x000001FF, 0x000001FF,
  0xC2C1FFFF, 0x91A4FFFF, 0x9F9DFFFF, 0xAA95FFFF, 0xB490FFFF, 0xB98FEAFF, 0xB692CFFF, 0xAD98B8FF, 0x9F9FABFF, 0x93A7AEFF, 0x8AACBDFF, 0x86ADD6FF, 0x88AAF1FF, 0x7D7CB4FF, 0x000001FF, 0x000001FF,
  0x322735FF, 0x00042FFF, 0x050043FF, 0x120041FF, 0x1E0030FF, 0x250017FF, 0x240001FF, 0x180000FF, 0x080600FF, 0x000C00FF, 0x000F00FF, 0x000E00FF, 0x000A12FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x6D5B73FF, 0x0D2169FF, 0x251686FF, 0x3B0D84FF, 0x4F096AFF, 0x5A0A43FF, 0x58101BFF, 0x451A00FF, 0x2A2600FF, 0x153000FF, 0x063600FF, 0x003414FF, 0x012C3BFF, 0x000000FF, 0x000000FF, 0x000000FF,
  0xB69DBEFF, 0x455AB4FF, 0x634CD4FF, 0x7D40D1FF, 0x943BB5FF, 0xA03C88FF, 0x9F4559FF, 0x89512CFF, 0x695F15FF, 0x506C16FF, 0x3C722BFF, 0x317051FF, 0x33677FFF, 0x211824FF, 0x000000FF, 0x000000FF,
  0xB69DBEFF, 0x8581BAFF, 0x937AC7FF, 0x9E75C6FF, 0xA872BAFF, 0xAD73A8FF, 0xAC7793FF, 0xA37D7EFF, 0x958371FF, 0x8A8872FF, 0x818B7DFF, 0x7C8A8FFF, 0x7C86A3FF, 0x73627AFF, 0x000000FF, 0x000000FF,
  0x242F30FF, 0x000A2FFF, 0x00033DFF, 0x070039FF, 0x120023FF, 0x19000CFF, 0x180000FF, 0x100100FF, 0x050800FF, 0x001100FF, 0x001700FF, 0x001601FF, 0x001117FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x57686AFF, 0x042D68FF, 0x14207EFF, 0x281277FF, 0x3B0A56FF, 0x450B30FF, 0x44120CFF, 0x371D00FF, 0x232900FF, 0x0F3900FF, 0x024401FF, 0x00421CFF, 0x003943FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x97AFB2FF, 0x336BB0FF, 0x485CC8FF, 0x614AC0FF, 0x773F9BFF, 0x834170FF, 0x814A43FF, 0x725821FF, 0x5B6711FF, 0x427A16FF, 0x2F8631FF, 0x258457FF, 0x277A86FF, 0x161E20FF, 0x000000FF, 0x000000FF,
  0x97AFB2FF, 0x6B92B1FF, 0x758CBBFF, 0x8083B8FF, 0x897FA9FF, 0x8E7F96FF, 0x8E8382FF, 0x888A72FF, 0x7E9169FF, 0x73996CFF, 0x6A9E7AFF, 0x659D8BFF, 0x6599A0FF, 0x5D6E71FF, 0x000000FF, 0x000000FF,
  0x252525FF, 0x000323FF, 0x000031FF, 0x07002FFF, 0x120020FF, 0x190009FF, 0x180000FF, 0x100000FF, 0x050500FF, 0x000B00FF, 0x000F00FF, 0x000E00FF, 0x00090DFF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x585858FF, 0x051F56FF, 0x14136BFF, 0x280A68FF, 0x3B0650FF, 0x45072BFF, 0x440E08FF, 0x371800FF, 0x242400FF, 0x102F00FF, 0x023500FF, 0x00330EFF, 0x002B32FF, 0x000000FF, 0x000000FF, 0x000000FF,
  0x989898FF, 0x335696FF, 0x4847ACFF, 0x613CAAFF, 0x77368FFF, 0x833864FF, 0x814038FF, 0x734E18FF, 0x5C5D09FF, 0x43690AFF, 0x30701DFF, 0x266E40FF, 0x27646DFF, 0x161616FF, 0x000000FF, 0x000000FF,
  0x989898FF, 0x6C7C97FF, 0x7675A0FF, 0x81709FFF, 0x8A6D94FF, 0x8F6E82FF, 0x8E726EFF, 0x88785EFF, 0x7E7F56FF, 0x738457FF, 0x6A8761FF, 0x658672FF, 0x668286FF, 0x5E5E5EFF, 0x000000FF, 0x000000FF,
]);

function reverse_RGBA(inp, wh) {
  let o = 'const ' + wh + ' = new Uint32Array([\n  ';
  let online = 0;
  for (let i in inp) {
    let n = inp[i];
    let val1 = n & 0xFF;
    let val2 = (n >>> 8) & 0xFF;
    let val3 = (n >>> 16) & 0xFF;
    let val4 = (n >>> 24) & 0xFF;

    o += "0x" + hex2(val4) + hex2(val1) + hex2(val2) + hex2(val3);
    online++;
    if (online === 16) {
      o += ",\n  ";
      online = 0;
    }
    else {
      o += ", ";
    }
  }

  return o + "\n])";
}
//console.log(reverse_RGBA(NES_palette, 'NES_palette_reversed'));
